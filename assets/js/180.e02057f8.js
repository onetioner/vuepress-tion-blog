(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{548:function(t,i,a){"use strict";a.r(i);var _=a(7),e=Object(_.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git-分布式版本控制工具"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-分布式版本控制工具"}},[t._v("#")]),t._v(" Git 分布式版本控制工具")]),t._v(" "),i("h2",{attrs:{id:"课程内容"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#课程内容"}},[t._v("#")]),t._v(" 课程内容")]),t._v(" "),i("ul",[i("li",[t._v("Git概述")]),t._v(" "),i("li",[t._v("Git代码托管服务")]),t._v(" "),i("li",[t._v("Git常用命令")]),t._v(" "),i("li",[t._v("在IDEA中使用Git")])]),t._v(" "),i("h2",{attrs:{id:"_1-前言"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[t._v("#")]),t._v(" 1. 前言")]),t._v(" "),i("h3",{attrs:{id:"_1-1-什么是git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是git"}},[t._v("#")]),t._v(" 1.1 什么是Git")]),t._v(" "),i("p",[t._v("Git是一个分布式版本控制工具，主要用于管理开发过程中的源代码文件（Java类、xml文件、html页面等），在软件开发过程中被广泛使用。")]),t._v(" "),i("p",[t._v("在IDEA开发工具中可以集成Git（后面会讲解Git安装和集成过程）：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924171926037.png",alt:"image-20210924171926037"}})]),t._v(" "),i("p",[t._v("集成后在IDEA中可以看到Git相关图标："),i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924172028329.png",alt:"image-20210924172028329"}})]),t._v(" "),i("p",[t._v("可以通过启动两个IDEA窗口模拟两个开发人员来展示Git的使用：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926080623416.png",alt:"image-20210926080623416"}})]),t._v(" "),i("p",[t._v("其他的版本控制工具：")]),t._v(" "),i("ul",[i("li",[t._v("SVN")]),t._v(" "),i("li",[t._v("CVS")]),t._v(" "),i("li",[t._v("VSS")])]),t._v(" "),i("h3",{attrs:{id:"_1-2-使用git能做什么"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-使用git能做什么"}},[t._v("#")]),t._v(" 1.2 使用Git能做什么")]),t._v(" "),i("ul",[i("li",[t._v("代码回溯：Git在管理文件过程中会记录日志，方便回退到历史版本")]),t._v(" "),i("li",[t._v("版本切换：Git存在分支的概念，一个项目可以有多个分支（版本），可以任意切换")]),t._v(" "),i("li",[t._v("多人协作：Git支持多人协作，即一个团队共同开发一个项目，每个团队成员负责一部分代码，通过Git就可以管理和协调")]),t._v(" "),i("li",[t._v("远程备份：Git通过仓库管理文件，在Git中存在远程仓库，如果本地文件丢失还可以从远程仓库获取")])]),t._v(" "),i("h2",{attrs:{id:"_2-git概述"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-git概述"}},[t._v("#")]),t._v(" 2. Git概述")]),t._v(" "),i("h3",{attrs:{id:"_2-1-git简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-git简介"}},[t._v("#")]),t._v(" 2.1 Git简介")]),t._v(" "),i("p",[t._v("Git 是一个分布式版本控制工具，通常用来对软件开发过程中的源代码文件进行管理。通过Git 仓库来存储和管理这些文件，Git 仓库分为两种：")]),t._v(" "),i("ul",[i("li",[t._v("本地仓库：开发人员自己电脑上的 Git 仓库")]),t._v(" "),i("li",[t._v("远程仓库：远程服务器上的 Git 仓库")])]),t._v(" "),i("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924173708313.png",alt:"image-20210924173708313"}}),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("commit：提交,将本地文件和版本信息保存到本地仓库")]),t._v(" "),i("p",[t._v("push：推送,将本地仓库文件和版本信息上传到远程仓库")]),t._v(" "),i("p",[t._v("pull：拉取,将远程仓库文件和版本信息下载到本地仓库")])]),t._v(" "),i("h3",{attrs:{id:"_2-2-git下载与安装"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-git下载与安装"}},[t._v("#")]),t._v(" 2.2 Git下载与安装")]),t._v(" "),i("p",[t._v("下载地址： https://git-scm.com/download")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924174639182.png",alt:"image-20210924174639182"}})]),t._v(" "),i("p",[t._v("下载完成后得到安装文件："),i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924174717172.png",alt:"image-20210924174717172"}})]),t._v(" "),i("p",[t._v("直接双击完成安装即可，安装完成后可以在任意目录下点击鼠标右键，如果能够看到如下菜单则说明安装成功：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924174934683.png",alt:"image-20210924174934683"}})]),t._v(" "),i("p",[t._v("Git GUI Here：打开Git 图形界面")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924175209242.png",alt:"image-20210924175209242"}})]),t._v(" "),i("p",[t._v("Git Bash Here：打开Git 命令行")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210924175314485.png",alt:"image-20210924175314485"}})]),t._v(" "),i("p",[t._v("Git安装目录结构如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926094227522.png",alt:"image-20210926094227522"}})]),t._v(" "),i("h2",{attrs:{id:"_3-git代码托管服务"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-git代码托管服务"}},[t._v("#")]),t._v(" 3. Git代码托管服务")]),t._v(" "),i("h3",{attrs:{id:"_3-1-常用的git代码托管服务"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-常用的git代码托管服务"}},[t._v("#")]),t._v(" 3.1 常用的Git代码托管服务")]),t._v(" "),i("p",[t._v("Git中存在两种类型的仓库，即"),i("strong",[t._v("本地仓库")]),t._v("和"),i("strong",[t._v("远程仓库")]),t._v("。那么我们如何搭建Git"),i("strong",[t._v("远程仓库")]),t._v("呢？")]),t._v(" "),i("p",[t._v("我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",[t._v("名称")]),t._v(" "),i("th",[t._v("网址")]),t._v(" "),i("th",[t._v("说明")])])]),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("gitHub")]),t._v(" "),i("td",[t._v("https://github.com/")]),t._v(" "),i("td",[t._v("一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub")])]),t._v(" "),i("tr",[i("td",[t._v("码云")]),t._v(" "),i("td",[t._v("https://gitee.com/")]),t._v(" "),i("td",[t._v("国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快")])]),t._v(" "),i("tr",[i("td",[t._v("GitLab")]),t._v(" "),i("td",[t._v("https://about.gitlab.com/")]),t._v(" "),i("td",[t._v("一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务")])]),t._v(" "),i("tr",[i("td"),t._v(" "),i("td"),t._v(" "),i("td")])])]),t._v(" "),i("h3",{attrs:{id:"_3-2-码云代码托管服务"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-码云代码托管服务"}},[t._v("#")]),t._v(" 3.2 码云代码托管服务")]),t._v(" "),i("p",[t._v("码云网址：https://gitee.com/")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926082758518.png",alt:"image-20210926082758518"}})]),t._v(" "),i("p",[t._v("使用码云的操作流程如下：")]),t._v(" "),i("ol",[i("li",[t._v("注册码云账号")]),t._v(" "),i("li",[t._v("登录码云")]),t._v(" "),i("li",[t._v("创建远程仓库")]),t._v(" "),i("li",[t._v("邀请其他用户成为仓库成员")])]),t._v(" "),i("h4",{attrs:{id:"_3-2-1-注册码云账号"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-注册码云账号"}},[t._v("#")]),t._v(" 3.2.1 注册码云账号")]),t._v(" "),i("p",[t._v("注册网址： https://gitee.com/signup")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926083229013.png",alt:"image-20210926083229013"}})]),t._v(" "),i("h4",{attrs:{id:"_3-2-2-登录码云"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-登录码云"}},[t._v("#")]),t._v(" 3.2.2 登录码云")]),t._v(" "),i("p",[t._v("注册完成后可以使用刚刚注册的邮箱进行登录（地址： https://gitee.com/login ）")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926083328306.png",alt:"image-20210926083328306"}})]),t._v(" "),i("h4",{attrs:{id:"_3-2-3-创建远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-创建远程仓库"}},[t._v("#")]),t._v(" 3.2.3 创建远程仓库")]),t._v(" "),i("p",[t._v("登录成功后可以创建远程仓库，操作方式如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926083510298.png",alt:"image-20210926083510298"}})]),t._v(" "),i("p",[t._v("页面跳转到新建仓库页面：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926083629924.png",alt:"image-20210926083629924"}})]),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("仓库名称：必填，每个仓库都需要有一个名称，同一个码云账号下的仓库名称不能重复")]),t._v(" "),i("p",[t._v("路径：访问远程仓库时会使用到，一般无需手动指定，和仓库名称自动保持一致")]),t._v(" "),i("p",[t._v("开源：所有人都可以查看此仓库")]),t._v(" "),i("p",[t._v("私有：只有此仓库的成员可见，其他人不可见")])]),t._v(" "),i("p",[t._v("创建完成后可以查看仓库信息：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926090131032.png",alt:"image-20210926090131032"}})]),t._v(" "),i("p",[i("strong",[t._v("注意")]),t._v("：每个Git远程仓库都会对应一个网络地址，点击【克隆/下载】按钮，在弹出窗口点击【复制】按钮即可复制网络地址，地址如下：")]),t._v(" "),i("p",[t._v("https://gitee.com/ChuanZhiBoKe/myGitRepo.git")]),t._v(" "),i("h4",{attrs:{id:"_3-2-4-邀请其他用户成为仓库成员"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-邀请其他用户成为仓库成员"}},[t._v("#")]),t._v(" 3.2.4 邀请其他用户成为仓库成员")]),t._v(" "),i("p",[t._v("前面已经在码云上创建了自己的远程仓库，目前仓库成员只有自己一个人（身份为管理员）。在企业实际开发中，一个项目往往是由多个人共同开发完成的，为了使多个参与者都有权限操作远程仓库，就需要邀请其他项目参与者成为当前仓库的成员。")]),t._v(" "),i("p",[t._v("点击管理按钮进入仓库管理页面，左侧菜单中可以看到【仓库成员管理】：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926090608272.png",alt:"image-20210926090608272"}})]),t._v(" "),i("p",[t._v("点击【开发者】菜单，跳转到如下页面：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926091027151.png",alt:"image-20210926091027151"}})]),t._v(" "),i("p",[t._v("点击【添加仓库成员】菜单下的【邀请用户】菜单，跳转到如下页面：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926091204422.png",alt:"image-20210926091204422"}})]),t._v(" "),i("p",[t._v("可以看到邀请用户有多种方式：链接邀请、直接添加、通过仓库邀请成员")]),t._v(" "),i("p",[i("strong",[t._v("注意")]),t._v("：被邀请用户必须为码云的注册用户，否则无法成为仓库成员")]),t._v(" "),i("h2",{attrs:{id:"_4-git常用命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-git常用命令"}},[t._v("#")]),t._v(" 4. Git常用命令")]),t._v(" "),i("h3",{attrs:{id:"_4-1-git全局设置"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-git全局设置"}},[t._v("#")]),t._v(" 4.1 Git全局设置")]),t._v(" "),i("p",[t._v("当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息。在Git 命令行中执行下面命令：")]),t._v(" "),i("p",[i("strong",[t._v("设置用户信息")])]),t._v(" "),i("p",[t._v('git config --global user.name "itcast"')]),t._v(" "),i("p",[t._v('git config --global user.email "hello@itcast.cn"')]),t._v(" "),i("p",[t._v('git config --global user.name "lzyhg"')]),t._v(" "),i("p",[t._v('git config --global user.email "lzyhg@itcast.cn"')]),t._v(" "),i("p",[i("strong",[t._v("查看配置信息")])]),t._v(" "),i("p",[t._v("git config --list")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926092820321.png",alt:"image-20210926092820321"}})]),t._v(" "),i("p",[t._v("注意：上面设置的user.name和user.email并不是我们在注册码云账号时使用的用户名和邮箱，此处可以任意设置。")]),t._v(" "),i("h3",{attrs:{id:"_4-2-获取git仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-获取git仓库"}},[t._v("#")]),t._v(" 4.2 获取Git仓库")]),t._v(" "),i("p",[t._v("要使用Git对我们的代码进行管理，首先需要获得Git仓库。")]),t._v(" "),i("p",[t._v("获取Git仓库通常有两种方式：")]),t._v(" "),i("ul",[i("li",[t._v("在本地初始化Git仓库（不常用）")]),t._v(" "),i("li",[t._v("从远程仓库克隆（常用）")])]),t._v(" "),i("h4",{attrs:{id:"_4-2-1-在本地初始化git仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-在本地初始化git仓库"}},[t._v("#")]),t._v(" 4.2.1 在本地初始化Git仓库")]),t._v(" "),i("p",[i("strong",[t._v("操作步骤如下")]),t._v("：")]),t._v(" "),i("ol",[i("li",[t._v("在任意目录下创建一个空目录（例如repo1）作为我们的本地Git仓库")]),t._v(" "),i("li",[t._v("进入这个目录中，点击右键打开Git bash窗口")]),t._v(" "),i("li",[t._v("执行命令"),i("strong",[t._v("git")]),t._v(" "),i("strong",[t._v("init")])])]),t._v(" "),i("p",[t._v("如果在当前目录中看到.git文件夹（此文件夹为隐藏文件夹）则说明Git仓库创建成功")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926093721515.png",alt:"image-20210926093721515"}})]),t._v(" "),i("h4",{attrs:{id:"_4-2-2-从远程仓库克隆"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-从远程仓库克隆"}},[t._v("#")]),t._v(" 4.2.2 从远程仓库克隆")]),t._v(" "),i("p",[t._v("可以通过Git提供的命令从远程仓库进行克隆，将远程仓库克隆到本地")]),t._v(" "),i("p",[i("strong",[t._v("命令格式")]),t._v("：git clone 远程仓库地址")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926094404332.png",alt:"image-20210926094404332"}})]),t._v(" "),i("h3",{attrs:{id:"_4-3-工作区、暂存区、版本库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-工作区、暂存区、版本库"}},[t._v("#")]),t._v(" 4.3 工作区、暂存区、版本库")]),t._v(" "),i("p",[t._v("为了更好的学习Git，我们需要了解Git相关的一些概念，这些概念在后面的学习中会经常提到。")]),t._v(" "),i("p",[i("strong",[t._v("版本库")]),t._v("：前面看到的.git隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等")]),t._v(" "),i("p",[i("strong",[t._v("工作区")]),t._v("：包含.git文件夹的目录就是工作区，也称为工作目录，主要用于存放开发的代码")]),t._v(" "),i("p",[i("strong",[t._v("暂存区")]),t._v("：.git文件夹中有很多文件，其中有一个index文件就是暂存区，也可以叫做stage。暂存区是一个临时保存修改文件的地方")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926094831386.png",alt:"image-20210926094831386"}})]),t._v(" "),i("h3",{attrs:{id:"_4-4-git工作区中文件的状态"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-git工作区中文件的状态"}},[t._v("#")]),t._v(" 4.4 Git工作区中文件的状态")]),t._v(" "),i("p",[t._v("Git工作区中的文件存在两种状态：")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("untracked 未跟踪（未被纳入版本控制）")])]),t._v(" "),i("li",[i("p",[t._v("tracked 已跟踪（被纳入版本控制）")]),t._v(" "),i("p",[t._v("​     1）Unmodified 未修改状态")]),t._v(" "),i("p",[t._v("​     2）Modified 已修改状态")]),t._v(" "),i("p",[t._v("​     3）Staged 已暂存状态")])])]),t._v(" "),i("p",[i("strong",[t._v("注意")]),t._v("：文件的状态会随着我们执行Git的命令发生变化")]),t._v(" "),i("h3",{attrs:{id:"_4-5-本地仓库操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-本地仓库操作"}},[t._v("#")]),t._v(" 4.5 本地仓库操作")]),t._v(" "),i("p",[t._v("本地仓库常用命令如下：")]),t._v(" "),i("ul",[i("li",[t._v("git status 查看文件状态")]),t._v(" "),i("li",[t._v("git add 将文件的修改加入暂存区")]),t._v(" "),i("li",[t._v("git reset 将暂存区的文件取消暂存或者是切换到指定版本")]),t._v(" "),i("li",[t._v("git commit 将暂存区的文件修改提交到版本库")]),t._v(" "),i("li",[t._v("git log  查看日志")])]),t._v(" "),i("h4",{attrs:{id:"_4-5-1-git-status"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-git-status"}},[t._v("#")]),t._v(" 4.5.1 git status")]),t._v(" "),i("p",[t._v("git status 命令用于查看文件状态")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926095623297.png",alt:"image-20210926095623297"}})]),t._v(" "),i("p",[t._v("注意：由于工作区中文件状态的不同，执行 git status 命令后的输出也会不同")]),t._v(" "),i("h4",{attrs:{id:"_4-5-2-git-add"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-git-add"}},[t._v("#")]),t._v(" 4.5.2 git add")]),t._v(" "),i("p",[t._v("git add 命令的作用是将文件的修改加入暂存区，命令格式：git add fileName")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926100003056.png",alt:"image-20210926100003056"}})]),t._v(" "),i("p",[t._v("加入暂存区后再执行 git status 命令，可以发现文件的状态已经发生变化。")]),t._v(" "),i("h4",{attrs:{id:"_4-5-3-git-reset"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-3-git-reset"}},[t._v("#")]),t._v(" 4.5.3 git reset")]),t._v(" "),i("p",[t._v("git reset 命令的作用是将暂存区的文件"),i("strong",[t._v("取消暂存")]),t._v("或者是"),i("strong",[t._v("切换到指定版本")])]),t._v(" "),i("p",[t._v("取消暂存命令格式：git reset 文件名")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926101346514.png",alt:"image-20210926101346514"}})]),t._v(" "),i("p",[t._v("切换到指定版本命令格式：git reset --hard 版本号")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926101401721.png",alt:"image-20210926101401721"}})]),t._v(" "),i("p",[t._v("注意：每次Git提交都会产生新的版本号，通过版本号就可以回到历史版本")]),t._v(" "),i("h4",{attrs:{id:"_4-5-4-git-commit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-4-git-commit"}},[t._v("#")]),t._v(" 4.5.4 git commit")]),t._v(" "),i("p",[t._v("git commit 命令的作用是将暂存区的文件修改提交到版本库，命令格式：git commit -m msg 文件名")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926101859601.png",alt:"l"}})]),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("-m：代表message，每次提交时需要设置，会记录到日志中")]),t._v(" "),i("p",[t._v("可以使用通配符*一次提交多个文件")])]),t._v(" "),i("h4",{attrs:{id:"_4-5-5-git-log"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-5-git-log"}},[t._v("#")]),t._v(" 4.5.5 git log")]),t._v(" "),i("p",[t._v("git log 命令的作用是查看提交日志")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926102305539.png",alt:"image-20210926102305539"}})]),t._v(" "),i("p",[t._v("通过git log命令查看日志，可以发现每次提交都会产生一个版本号，提交时设置的message、提交人、邮箱、提交时间等信息都会记录到日志中")]),t._v(" "),i("h3",{attrs:{id:"_4-6-远程仓库操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-远程仓库操作"}},[t._v("#")]),t._v(" 4.6 远程仓库操作")]),t._v(" "),i("p",[t._v("前面执行的命令操作都是针对的本地仓库，本节我们会学习关于远程仓库的一些操作，具体包括：")]),t._v(" "),i("ul",[i("li",[t._v("git remote  查看远程仓库")]),t._v(" "),i("li",[t._v("git remote add 添加远程仓库")]),t._v(" "),i("li",[t._v("git clone 从远程仓库克隆")]),t._v(" "),i("li",[t._v("git pull 从远程仓库拉取")]),t._v(" "),i("li",[t._v("git push 推送到远程仓库")])]),t._v(" "),i("h4",{attrs:{id:"_4-6-1-git-remote"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-git-remote"}},[t._v("#")]),t._v(" 4.6.1 git remote")]),t._v(" "),i("p",[t._v("如果要查看已经配置的远程仓库服务器，可以执行 git remote 命令，它会列出每一个远程服务器的简称。")]),t._v(" "),i("p",[t._v("如果已经克隆了远程仓库，那么至少应该能看到 origin ，这是 Git 克隆的仓库服务器的默认名字。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926103746721.png",alt:"image-20210926103746721"}})]),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("可以通过-v参数查看远程仓库更加详细的信息")]),t._v(" "),i("p",[t._v("本地仓库配置的远程仓库都需要一个简称，后续在和远程仓库交互时会使用到这个简称")])]),t._v(" "),i("h4",{attrs:{id:"_4-6-2-git-remote-add"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-2-git-remote-add"}},[t._v("#")]),t._v(" 4.6.2 git remote add")]),t._v(" "),i("p",[t._v("添加远程仓库命令格式：git remote add 简称 远程仓库地址")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926104723901.png",alt:"image-20210926104723901"}})]),t._v(" "),i("h4",{attrs:{id:"_4-6-3-git-clone"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-3-git-clone"}},[t._v("#")]),t._v(" 4.6.3 git clone")]),t._v(" "),i("p",[t._v("如果你想获得一份已经存在了的 Git 远程仓库的拷贝，这时就要用到 git clone 命令。 Git 克隆的是该 Git 仓库服务器上的几乎所有数据（包括日志信息、历史记录等）。")]),t._v(" "),i("p",[t._v("克隆仓库的命令格式： git clone 远程仓库地址")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926105017148.png",alt:"image-20210926105017148"}})]),t._v(" "),i("h4",{attrs:{id:"_4-6-4-git-push"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-4-git-push"}},[t._v("#")]),t._v(" 4.6.4 git push")]),t._v(" "),i("p",[t._v("将本地仓库内容推送到远程仓库，命令格式：git push 远程仓库简称 分支名称")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926105413681.png",alt:"image-20210926105413681"}})]),t._v(" "),i("p",[t._v("在使用git push命令将本地文件推送至码云远程仓库时，如果是第一次操作，需要进行身份认证，认证通过才可以推送，如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926105913504.png",alt:"image-20210926105913504"}})]),t._v(" "),i("p",[t._v("注意：上面的用户名和密码对应的就是我们在码云上注册的用户名和密码，认证通过后会将用户名和密码保存到windows系统中（如下图），后续再推送则无需重复输入用户名和密码。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926110810630.png",alt:"image-20210926110810630"}})]),t._v(" "),i("p",[t._v("推送完成后可以到远程仓库中查看文件的变化。")]),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("一个仓库可以有多个分支，默认情况下在创建仓库后会自动创建一个master分支")]),t._v(" "),i("p",[t._v("后面会讲解分支相关的操作")])]),t._v(" "),i("h4",{attrs:{id:"_4-6-5-git-pull"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-5-git-pull"}},[t._v("#")]),t._v(" 4.6.5 git pull")]),t._v(" "),i("p",[i("strong",[t._v("git")]),t._v(" "),i("strong",[t._v("pull")]),t._v(" 命令的作用是从远程仓库获取最新版本并合并到本地仓库")]),t._v(" "),i("p",[t._v("命令格式：git pull 远程仓库简称 分支名称")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926111013002.png",alt:"image-20210926111013002"}})]),t._v(" "),i("h3",{attrs:{id:"_4-7-分支操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-分支操作"}},[t._v("#")]),t._v(" 4.7 分支操作")]),t._v(" "),i("p",[t._v("分支是Git 使用过程中非常重要的概念。使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。")]),t._v(" "),i("p",[t._v("本地仓库和远程仓库中都有分支，同一个仓库可以有多个分支，各个分支相互独立，互不干扰。")]),t._v(" "),i("p",[t._v("通过git init 命令创建本地仓库时默认会创建一个master分支。")]),t._v(" "),i("p",[t._v("本节我们会学习关于分支的相关命令，具体命令如下：")]),t._v(" "),i("ul",[i("li",[t._v("git branch                                     查看分支")]),t._v(" "),i("li",[t._v("git branch [name]                       创建分支")]),t._v(" "),i("li",[t._v("git checkout [name]                    切换分支")]),t._v(" "),i("li",[t._v("git push [shortName] [name]   推送至远程仓库分支")]),t._v(" "),i("li",[t._v("git merge [name]                        合并分支")])]),t._v(" "),i("h4",{attrs:{id:"_4-7-1-查看分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-1-查看分支"}},[t._v("#")]),t._v(" 4.7.1 查看分支")]),t._v(" "),i("p",[t._v("查看分支命令：git branch")]),t._v(" "),i("p",[t._v("git branch \t\t列出所有本地分支")]),t._v(" "),i("p",[t._v("git branch -r \t列出所有远程分支")]),t._v(" "),i("p",[t._v("git branch -a \t列出所有本地分支和远程分支")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926124843275.png",alt:"image-20210926124843275"}})]),t._v(" "),i("h4",{attrs:{id:"_4-7-2-创建分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-2-创建分支"}},[t._v("#")]),t._v(" 4.7.2 创建分支")]),t._v(" "),i("p",[t._v("创建分支命令格式：git branch 分支名称")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926125053711.png",alt:"image-20210926125053711"}})]),t._v(" "),i("h4",{attrs:{id:"_4-7-3-切换分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-3-切换分支"}},[t._v("#")]),t._v(" 4.7.3 切换分支")]),t._v(" "),i("p",[t._v("一个仓库中可以有多个分支，切换分支命令格式：git checkout 分支名称")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926125259155.png",alt:"image-20210926125259155"}})]),t._v(" "),i("p",[t._v("注意：在命令行中会显示出当前所在分支，如上图所示。")]),t._v(" "),i("h4",{attrs:{id:"_4-7-4-推送至远程仓库分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-4-推送至远程仓库分支"}},[t._v("#")]),t._v(" 4.7.4 推送至远程仓库分支")]),t._v(" "),i("p",[t._v("推送至远程仓库分支命令格式：git push 远程仓库简称 分支命令")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926125628894.png",alt:"image-20210926125628894"}})]),t._v(" "),i("p",[t._v("推送完成后可以查看远程仓库：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926125810878.png",alt:"image-20210926125810878"}})]),t._v(" "),i("h4",{attrs:{id:"_4-7-5-合并分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-5-合并分支"}},[t._v("#")]),t._v(" 4.7.5 合并分支")]),t._v(" "),i("p",[t._v("合并分支就是将两个分支的文件进行合并处理，命令格式：git merge 分支命令")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926130213015.png",alt:"image-20210926130213015"}})]),t._v(" "),i("p",[t._v("注意：分支合并时需注意合并的方向，如上图所示，在Master分支执行操作，结果就是将b3分支合并到Master分支。")]),t._v(" "),i("h3",{attrs:{id:"_4-8-标签操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-标签操作"}},[t._v("#")]),t._v(" 4.8 标签操作")]),t._v(" "),i("p",[t._v("Git 中的标签，指的是某个分支某个特定时间点的状态。通过标签，可以很方便的切换到标记时的状态。")]),t._v(" "),i("p",[t._v("比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 、v1.2等）。下面是mybatis-plus的标签：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926130452557.png",alt:"image-20210926130452557"}})]),t._v(" "),i("p",[t._v("在本节中，我们将学习如下和标签相关的命令：")]),t._v(" "),i("ul",[i("li",[t._v("git tag                                                查看标签")]),t._v(" "),i("li",[t._v("git tag [name]                                  创建标签")]),t._v(" "),i("li",[t._v("git push [shortName] [name]       将标签推送至远程仓库")]),t._v(" "),i("li",[t._v("git checkout -b [branch] [name]   检出标签")])]),t._v(" "),i("h4",{attrs:{id:"_4-8-1-查看标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-1-查看标签"}},[t._v("#")]),t._v(" 4.8.1 查看标签")]),t._v(" "),i("p",[t._v("查看标签命令：git tag")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926151333473.png",alt:"image-20210926151333473"}})]),t._v(" "),i("h4",{attrs:{id:"_4-8-2-创建标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-2-创建标签"}},[t._v("#")]),t._v(" 4.8.2 创建标签")]),t._v(" "),i("p",[t._v("创建标签命令：git tag 标签名")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926151452581.png",alt:"image-20210926151452581"}})]),t._v(" "),i("h4",{attrs:{id:"_4-8-3-将标签推送至远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-3-将标签推送至远程仓库"}},[t._v("#")]),t._v(" 4.8.3 将标签推送至远程仓库")]),t._v(" "),i("p",[t._v("将标签推送至远程仓库命令：git push 远程仓库简称 标签名")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926151621286.png",alt:"image-20210926151621286"}})]),t._v(" "),i("p",[t._v("推送完成后可以在远程仓库中查看标签。")]),t._v(" "),i("h4",{attrs:{id:"_4-8-4-检出标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-4-检出标签"}},[t._v("#")]),t._v(" 4.8.4 检出标签")]),t._v(" "),i("p",[t._v("检出标签时需要新建一个分支来指向某个标签，检出标签的命令格式：git checkout -b 分支名 标签名")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926152111514.png",alt:"image-20210926152111514"}})]),t._v(" "),i("h2",{attrs:{id:"_5-在idea中使用git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-在idea中使用git"}},[t._v("#")]),t._v(" 5. 在IDEA中使用Git")]),t._v(" "),i("p",[t._v("通过Git命令可以完成Git相关操作，为了简化操作过程，我们可以在IEDA中配置Git，配置好后就可以在IDEA中通过图形化的方式来操作Git。")]),t._v(" "),i("h3",{attrs:{id:"_5-1-在idea中配置git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-在idea中配置git"}},[t._v("#")]),t._v(" 5.1 在IDEA中配置Git")]),t._v(" "),i("p",[t._v("在IDEA中使用Git，本质上还是使用的本地安装的Git软件，所以需要提前安装好Git并在IDEA中配置Git。")]),t._v(" "),i("p",[t._v("Git安装目录：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926152847948.png",alt:"image-20210926152847948"}})]),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("git.exe：Git安装目录下的可执行文件，前面执行的git命令，其实就是执行的这个文件")])]),t._v(" "),i("p",[t._v("IDEA中的配置：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926152950420.png",alt:"image-20210926152950420"}})]),t._v(" "),i("p",[t._v("说明：如果Git安装在默认目录中（C:\\Program Files\\Git），则IDEA中无需再手动配置，直接就可以使用。")]),t._v(" "),i("h3",{attrs:{id:"_5-2-获取git仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-获取git仓库"}},[t._v("#")]),t._v(" 5.2 获取Git仓库")]),t._v(" "),i("p",[t._v("在IDEA中获取Git仓库有两种方式：")]),t._v(" "),i("ul",[i("li",[t._v("本地初始化仓库，本质就是执行 git init 命令")]),t._v(" "),i("li",[t._v("从远程仓库克隆，本质就是执行 git clone 命令")])]),t._v(" "),i("h4",{attrs:{id:"_5-2-1-本地初始化仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-本地初始化仓库"}},[t._v("#")]),t._v(" 5.2.1 本地初始化仓库")]),t._v(" "),i("p",[t._v("在IDEA中通过如下操作可以在本地初始化一个本地仓库，其实底层就是执行的 git init 命令。操作过程如下：")]),t._v(" "),i("p",[t._v("1）依次选择菜单【VCS】---【Import into Version Control】---【Create Git Repository】")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926153806414.png",alt:"image-20210926153806414"}})]),t._v(" "),i("p",[t._v("2）在弹出的【Create Git Repository】对话框中选择当前项目根目录，点击【OK】按钮：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926154201744.png",alt:"image-20210926154201744"}})]),t._v(" "),i("p",[t._v("操作完成后可以看到当前项目根目录下出现了.git隐藏目录：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926154757082.png",alt:"image-20210926154757082"}})]),t._v(" "),i("p",[t._v("操作完成后可以在IDEA的工具栏中看到Git的相关操作图标："),i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926154933876.png",alt:"image-20210926154933876"}})]),t._v(" "),i("h4",{attrs:{id:"_5-2-2-从远程仓库克隆"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-从远程仓库克隆"}},[t._v("#")]),t._v(" 5.2.2 从远程仓库克隆")]),t._v(" "),i("p",[t._v("在IDEA中从远程仓库克隆本质就是执行的 git clone 命令，具体操作过程如下：")]),t._v(" "),i("p",[t._v("1）在IDEA开始窗口中点击【Get from Version Control】")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926155434202.png",alt:"image-20210926155434202"}})]),t._v(" "),i("p",[t._v("2）在弹出的【Get from Version Control】窗口中输入远程仓库的URL地址和对应的本地仓库存放目录，点击【Clone】按钮进行仓库克隆操作。")]),t._v(" "),i("p",[t._v("仓库地址：https://gitee.com/lu-kang/helloworld.git")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926155750107.png",alt:"image-20210926155750107"}})]),t._v(" "),i("h3",{attrs:{id:"_5-3-git忽略文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-git忽略文件"}},[t._v("#")]),t._v(" 5.3 Git忽略文件")]),t._v(" "),i("p",[t._v("在Git工作区中有一个特殊的文件 .gitignore，通过此文件可以指定工作区中的哪些文件不需要Git管理。我们在码云上创建Git远程仓库时可以指定生成此文件，如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926161050169.png",alt:"image-20210926161050169"}})]),t._v(" "),i("p",[t._v("创建完成后效果如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926161233052.png",alt:"image-20210926161233052"}})]),t._v(" "),i("p",[t._v("解释说明：")]),t._v(" "),i("blockquote",[i("p",[t._v("1）我们在使用Git管理项目代码时，并不是所有文件都需要Git管理，例如Java项目中编译的.class文件、开发工具自带的配置文件等，这些文件没有必要交给Git管理，所以也就不需要提交到Git版本库中")]),t._v(" "),i("p",[t._v("2）注意忽略文件的名称是固定的，不能修改")]),t._v(" "),i("p",[t._v("3）添加到忽略列表中的文件后续Git工具就会忽略它")])]),t._v(" "),i("p",[t._v("一个参考的.gitignore文件内容如下：")]),t._v(" "),i("div",{staticClass:"language-file line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v(".git\nlogs\nrebel.xml\ntarget/\n!.mvn/wrapper/maven-wrapper.jar\nlog.path_IS_UNDEFINED\n.DS_Store\noffline_user.md\n*.class\n\n### IntelliJ IDEA ###\n.idea\n*.iws\n*.iml\n*.ipr\n")])]),t._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[t._v("1")]),i("br"),i("span",{staticClass:"line-number"},[t._v("2")]),i("br"),i("span",{staticClass:"line-number"},[t._v("3")]),i("br"),i("span",{staticClass:"line-number"},[t._v("4")]),i("br"),i("span",{staticClass:"line-number"},[t._v("5")]),i("br"),i("span",{staticClass:"line-number"},[t._v("6")]),i("br"),i("span",{staticClass:"line-number"},[t._v("7")]),i("br"),i("span",{staticClass:"line-number"},[t._v("8")]),i("br"),i("span",{staticClass:"line-number"},[t._v("9")]),i("br"),i("span",{staticClass:"line-number"},[t._v("10")]),i("br"),i("span",{staticClass:"line-number"},[t._v("11")]),i("br"),i("span",{staticClass:"line-number"},[t._v("12")]),i("br"),i("span",{staticClass:"line-number"},[t._v("13")]),i("br"),i("span",{staticClass:"line-number"},[t._v("14")]),i("br"),i("span",{staticClass:"line-number"},[t._v("15")]),i("br")])]),i("h3",{attrs:{id:"_5-4-本地仓库操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-本地仓库操作"}},[t._v("#")]),t._v(" 5.4 本地仓库操作")]),t._v(" "),i("p",[t._v("本地仓库操作：")]),t._v(" "),i("ul",[i("li",[t._v("将文件加入暂存区，本质就是执行 git add 命令")]),t._v(" "),i("li",[t._v("将暂存区的文件提交到版本库，本质就是执行 git commit 命令")]),t._v(" "),i("li",[t._v("查看日志，本质就是执行 git log 命令")])]),t._v(" "),i("h4",{attrs:{id:"_5-4-1-将文件加入暂存区"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-将文件加入暂存区"}},[t._v("#")]),t._v(" 5.4.1 将文件加入暂存区")]),t._v(" "),i("p",[t._v("当在Git工作区新增文件或者对已有文件修改后，就需要将文件的修改加入暂存区，具体操作如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926162515597.png",alt:"image-20210926162515597"}})]),t._v(" "),i("h4",{attrs:{id:"_5-4-2-将暂存区文件提交到版本库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-将暂存区文件提交到版本库"}},[t._v("#")]),t._v(" 5.4.2 将暂存区文件提交到版本库")]),t._v(" "),i("p",[t._v("将暂存区文件提交到版本库，可以选择一个文件进行提交，也可以选择整个项目提交多个文件。在IEDA中对文件的提交进行了简化操作，也就是如果文件修改后，无需再加入暂存区，可以直接提交。")]),t._v(" "),i("p",[t._v("1）提交一个文件：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926162809740.png",alt:"image-20210926162809740"}})]),t._v(" "),i("p",[t._v("可以看到，如果选中一个文件提交，则菜单名称为【Commit File...】")]),t._v(" "),i("p",[t._v("2）提交多个文件：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926162843891.png",alt:"image-20210926162843891"}})]),t._v(" "),i("p",[t._v("可以看到，如果提交多个文件，则菜单名称为【Commit Directory...】")]),t._v(" "),i("p",[t._v("由于提交操作属于高频操作，所以为了进一步方便操作，在IDEA的工具栏中提供了提交操作的快捷按钮："),i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926163535277.png",alt:"image-20210926163535277"}})]),t._v(" "),i("h4",{attrs:{id:"_5-4-3-查看日志"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-3-查看日志"}},[t._v("#")]),t._v(" 5.4.3 查看日志")]),t._v(" "),i("p",[t._v("查看日志，既可以查看整个仓库的提交日志，也可以查看某个文件的提交日志。")]),t._v(" "),i("p",[t._v("1）查看整个项目的提交日志：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926163902184.png",alt:"image-20210926163902184"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926164138430.png",alt:"image-20210926164138430"}})]),t._v(" "),i("p",[t._v("2）查看某个文件的提交日志")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926164210056.png",alt:"image-20210926164210056"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926164233935.png",alt:"image-20210926164233935"}})]),t._v(" "),i("h3",{attrs:{id:"_5-5-远程仓库操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-远程仓库操作"}},[t._v("#")]),t._v(" 5.5 远程仓库操作")]),t._v(" "),i("p",[t._v("远程仓库操作：")]),t._v(" "),i("ul",[i("li",[t._v("查看远程仓库，本质就是执行 git remote 命令")]),t._v(" "),i("li",[t._v("添加远程仓库，本质就是执行 git remote add 命令")]),t._v(" "),i("li",[t._v("推送至远程仓库，本质就是执行 git push 命令")]),t._v(" "),i("li",[t._v("从远程仓库拉取，本质就是执行 git pull 命令")])]),t._v(" "),i("h4",{attrs:{id:"_5-5-1-查看远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-1-查看远程仓库"}},[t._v("#")]),t._v(" 5.5.1 查看远程仓库")]),t._v(" "),i("p",[t._v("操作过程如下：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926165935756.png",alt:"image-20210926165935756"}})]),t._v(" "),i("p",[t._v("在弹出的【Git Remotes】窗口中可以看到配置的远程仓库：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926170143160.png",alt:"image-20210926170143160"}})]),t._v(" "),i("h4",{attrs:{id:"_5-5-2-添加远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-2-添加远程仓库"}},[t._v("#")]),t._v(" 5.5.2 添加远程仓库")]),t._v(" "),i("p",[t._v("一个本地仓库可以配置多个远程仓库，在【Git Remotes】窗口中点击【+】来添加一个新的远程仓库：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926170653126.png",alt:"image-20210926170653126"}})]),t._v(" "),i("h4",{attrs:{id:"_5-5-3-推送至远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-3-推送至远程仓库"}},[t._v("#")]),t._v(" 5.5.3 推送至远程仓库")]),t._v(" "),i("p",[t._v("可以通过如下操作将本地仓库文件推送至远程仓库：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926170908769.png",alt:"image-20210926170908769"}})]),t._v(" "),i("p",[t._v("在弹出的【Push Commits】窗口中可以看到本次推送的文件，点击【Push】按钮即可推送至远程仓库：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926171058705.png",alt:"image-20210926171058705"}})]),t._v(" "),i("p",[t._v("由于推送至远程仓库操作属于高频操作，所以可以通过IDEA工具栏中的提交快捷按钮同时完成提交和推送：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926171408649.png",alt:"image-20210926171408649"}})]),t._v(" "),i("p",[t._v("点击【Commit and Push...】按钮同时完成提交和推送操作")]),t._v(" "),i("h4",{attrs:{id:"_5-5-4-从远程仓库拉取"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-4-从远程仓库拉取"}},[t._v("#")]),t._v(" 5.5.4 从远程仓库拉取")]),t._v(" "),i("p",[t._v("可以通过如下操作从远程仓库拉取：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926171646041.png",alt:"image-20210926171646041"}})]),t._v(" "),i("p",[t._v("由于从远程仓库拉取文件属于高频操作，所以在IDEA的工具栏中提供了对应的快捷按钮："),i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926171919288.png",alt:"image-20210926171919288"}})]),t._v(" "),i("p",[t._v("在弹出的【Update Project】窗口中点击【OK】：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926171950911.png",alt:"image-20210926171950911"}})]),t._v(" "),i("h3",{attrs:{id:"_5-6-分支操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-分支操作"}},[t._v("#")]),t._v(" 5.6 分支操作")]),t._v(" "),i("p",[t._v("分支操作：")]),t._v(" "),i("ul",[i("li",[t._v("查看分支，本质就是执行 git branch 命令")]),t._v(" "),i("li",[t._v("创建分支，本质就是执行 git branch 分支名 命令")]),t._v(" "),i("li",[t._v("切换分支，本质就是执行 git checkout 命令")]),t._v(" "),i("li",[t._v("将分支推送到远程仓库，本质就是执行 git push 命令")]),t._v(" "),i("li",[t._v("合并分支，本质就是执行 git merge 命令")])]),t._v(" "),i("h4",{attrs:{id:"_5-6-1-查看分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-1-查看分支"}},[t._v("#")]),t._v(" 5.6.1 查看分支")]),t._v(" "),i("p",[t._v("可以通过如下操作查看分支：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926172752562.png",alt:"image-20210926172752562"}})]),t._v(" "),i("p",[t._v("在弹出的窗口中可以看到本地分支和远程分支：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926172903493.png",alt:"image-20210926172903493"}})]),t._v(" "),i("p",[t._v("由于分支操作属于高频操作，所以在IDEA的状态栏中提供了分支操作的快捷按钮：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926173622605.png",alt:"image-20210926173622605"}})]),t._v(" "),i("p",[t._v("点击【master】快捷按钮即可弹出【Git Branches】分支窗口：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926173744979.png",alt:"image-20210926173744979"}})]),t._v(" "),i("h4",{attrs:{id:"_5-6-2-创建分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-2-创建分支"}},[t._v("#")]),t._v(" 5.6.2 创建分支")]),t._v(" "),i("p",[t._v("在【Git Branches】分支窗口中点击【New Branch】，弹出如下窗口：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926173903894.png",alt:"image-20210926173903894"}})]),t._v(" "),i("p",[t._v("在弹出的【Create New Branch】窗口中输入新分支的名称，点击【Create】按钮完成分支创建")]),t._v(" "),i("h4",{attrs:{id:"_5-6-3-切换分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-3-切换分支"}},[t._v("#")]),t._v(" 5.6.3 切换分支")]),t._v(" "),i("p",[t._v("通过如下操作可以切换分支：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926174358500.png",alt:"image-20210926174358500"}})]),t._v(" "),i("h4",{attrs:{id:"_5-6-4-将分支推送到远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-4-将分支推送到远程仓库"}},[t._v("#")]),t._v(" 5.6.4 将分支推送到远程仓库")]),t._v(" "),i("p",[t._v("通过如下操作可以将分支推送到远程仓库：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926175004502.png",alt:"image-20210926175004502"}})]),t._v(" "),i("h4",{attrs:{id:"_5-6-5-合并分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-5-合并分支"}},[t._v("#")]),t._v(" 5.6.5 合并分支")]),t._v(" "),i("p",[t._v("通过下面操作可以进行分支的合并：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210926175216197.png",alt:"image-20210926175216197"}})])])}),[],!1,null,null,null);i.default=e.exports}}]);
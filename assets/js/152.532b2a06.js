(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{508:function(a,t,s){"use strict";s.r(t);var e=s(7),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"springcloud01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springcloud01"}},[a._v("#")]),a._v(" SpringCloud01")]),a._v(" "),t("h1",{attrs:{id:"_1-认识微服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识微服务"}},[a._v("#")]),a._v(" 1.认识微服务")]),a._v(" "),t("p",[a._v("随着互联网行业的发展，对服务的要求也越来越高，服务架构也从单体架构逐渐演变为现在流行的微服务架构。这些架构之间有怎样的差别呢？")]),a._v(" "),t("h2",{attrs:{id:"_1-0-学习目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-学习目标"}},[a._v("#")]),a._v(" 1.0.学习目标")]),a._v(" "),t("p",[a._v("了解微服务架构的优缺点")]),a._v(" "),t("h2",{attrs:{id:"_1-1-单体架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单体架构"}},[a._v("#")]),a._v(" 1.1.单体架构")]),a._v(" "),t("p",[t("strong",[a._v("单体架构")]),a._v("：将业务的所有功能集中在一个项目中开发，打成一个包部署。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713202807818.png",alt:"image-20210713202807818"}})]),a._v(" "),t("p",[a._v("单体架构的优缺点如下：")]),a._v(" "),t("p",[t("strong",[a._v("优点：")])]),a._v(" "),t("ul",[t("li",[a._v("架构简单")]),a._v(" "),t("li",[a._v("部署成本低")])]),a._v(" "),t("p",[t("strong",[a._v("缺点：")])]),a._v(" "),t("ul",[t("li",[a._v("耦合度高（维护困难、升级困难）")])]),a._v(" "),t("h2",{attrs:{id:"_1-2-分布式架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-分布式架构"}},[a._v("#")]),a._v(" 1.2.分布式架构")]),a._v(" "),t("p",[t("strong",[a._v("分布式架构")]),a._v("：根据业务功能对系统做拆分，每个业务功能模块作为独立项目开发，称为一个服务。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713203124797.png",alt:"image-20210713203124797"}})]),a._v(" "),t("p",[a._v("分布式架构的优缺点：")]),a._v(" "),t("p",[t("strong",[a._v("优点：")])]),a._v(" "),t("ul",[t("li",[a._v("降低服务耦合")]),a._v(" "),t("li",[a._v("有利于服务升级和拓展")])]),a._v(" "),t("p",[t("strong",[a._v("缺点：")])]),a._v(" "),t("ul",[t("li",[a._v("服务调用关系错综复杂")])]),a._v(" "),t("p",[t("strong",[a._v("服务治理")])]),a._v(" "),t("p",[a._v("分布式架构虽然降低了服务耦合，但是服务拆分时也有很多问题需要思考：")]),a._v(" "),t("ul",[t("li",[a._v("服务拆分的粒度如何界定？")]),a._v(" "),t("li",[a._v("服务之间如何调用？")]),a._v(" "),t("li",[a._v("服务的调用关系如何管理？")])]),a._v(" "),t("p",[a._v("人们需要制定一套行之有效的标准来约束分布式架构。")]),a._v(" "),t("h2",{attrs:{id:"_1-3-微服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-微服务"}},[a._v("#")]),a._v(" 1.3.微服务")]),a._v(" "),t("p",[a._v("微服务的架构特征：")]),a._v(" "),t("ul",[t("li",[a._v("单一职责：微服务拆分粒度更小，每一个服务都对应唯一的业务能力，做到单一职责")]),a._v(" "),t("li",[a._v("自治：团队独立、技术独立、数据独立，独立部署和交付")]),a._v(" "),t("li",[a._v("面向服务：服务提供统一标准的接口，与语言和技术无关")]),a._v(" "),t("li",[a._v("隔离性强：服务调用做好隔离、容错、降级，避免出现级联问题")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713203753373.png",alt:"image-20210713203753373"}})]),a._v(" "),t("p",[a._v("微服务的上述特性其实是在给分布式架构制定一个标准，进一步降低服务之间的耦合度，提供服务的独立性和灵活性。做到高内聚，低耦合。")]),a._v(" "),t("p",[a._v("因此，可以认为"),t("strong",[a._v("微服务")]),a._v("是一种经过良好架构设计的"),t("strong",[a._v("分布式架构方案")]),a._v(" 。")]),a._v(" "),t("p",[a._v("但方案该怎么落地？选用什么样的技术栈？全球的互联网公司都在积极尝试自己的微服务落地方案。")]),a._v(" "),t("p",[a._v("其中在Java领域最引人注目的就是SpringCloud提供的方案了。")]),a._v(" "),t("h2",{attrs:{id:"_1-4-springcloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-springcloud"}},[a._v("#")]),a._v(" 1.4.SpringCloud")]),a._v(" "),t("p",[a._v("SpringCloud是目前国内使用最广泛的微服务框架。官网地址：https://spring.io/projects/spring-cloud。")]),a._v(" "),t("p",[a._v("SpringCloud集成了各种微服务功能组件，并基于SpringBoot实现了这些组件的自动装配，从而提供了良好的开箱即用体验。")]),a._v(" "),t("p",[a._v("其中常见的组件包括：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713204155887.png",alt:"image-20210713204155887"}})]),a._v(" "),t("p",[a._v("另外，SpringCloud底层是依赖于SpringBoot的，并且有版本的兼容关系，如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713205003790.png",alt:"image-20210713205003790"}})]),a._v(" "),t("p",[a._v("我们课堂学习的版本是 Hoxton.SR10，因此对应的SpringBoot版本是2.3.x版本。")]),a._v(" "),t("h2",{attrs:{id:"_1-5-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-总结"}},[a._v("#")]),a._v(" 1.5.总结")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("单体架构：简单方便，高度耦合，扩展性差，适合小型项目。例如：学生管理系统")])]),a._v(" "),t("li",[t("p",[a._v("分布式架构：松耦合，扩展性好，但架构复杂，难度大。适合大型互联网项目，例如：京东、淘宝")])]),a._v(" "),t("li",[t("p",[a._v("微服务：一种良好的分布式架构方案")]),a._v(" "),t("p",[a._v("①优点：拆分粒度更小、服务更独立、耦合度更低")]),a._v(" "),t("p",[a._v("②缺点：架构非常复杂，运维、监控、部署难度提高")])]),a._v(" "),t("li",[t("p",[a._v("SpringCloud是微服务架构的一站式解决方案，集成了各种优秀微服务功能组件")])])]),a._v(" "),t("h1",{attrs:{id:"_2-服务拆分和远程调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务拆分和远程调用"}},[a._v("#")]),a._v(" 2.服务拆分和远程调用")]),a._v(" "),t("p",[a._v("任何分布式架构都离不开服务的拆分，微服务也是一样。")]),a._v(" "),t("h2",{attrs:{id:"_2-1-服务拆分原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-服务拆分原则"}},[a._v("#")]),a._v(" 2.1.服务拆分原则")]),a._v(" "),t("p",[a._v("这里我总结了微服务拆分时的几个原则：")]),a._v(" "),t("ul",[t("li",[a._v("不同微服务，不要重复开发相同业务")]),a._v(" "),t("li",[a._v("微服务数据独立，不要访问其它微服务的数据库")]),a._v(" "),t("li",[a._v("微服务可以将自己的业务暴露为接口，供其它微服务调用")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713210800950.png",alt:"image-20210713210800950"}})]),a._v(" "),t("h2",{attrs:{id:"_2-2-服务拆分示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-服务拆分示例"}},[a._v("#")]),a._v(" 2.2.服务拆分示例")]),a._v(" "),t("p",[a._v("以课前资料中的微服务cloud-demo为例，其结构如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713211009593.png",alt:"image-20210713211009593"}})]),a._v(" "),t("p",[a._v("cloud-demo：父工程，管理依赖")]),a._v(" "),t("ul",[t("li",[a._v("order-service：订单微服务，负责订单相关业务")]),a._v(" "),t("li",[a._v("user-service：用户微服务，负责用户相关业务")])]),a._v(" "),t("p",[a._v("要求：")]),a._v(" "),t("ul",[t("li",[a._v("订单微服务和用户微服务都必须有各自的数据库，相互独立")]),a._v(" "),t("li",[a._v("订单服务和用户服务都对外暴露Restful的接口")]),a._v(" "),t("li",[a._v("订单服务如果需要查询用户信息，只能调用用户服务的Restful接口，不能查询用户数据库")])]),a._v(" "),t("h3",{attrs:{id:"_2-2-1-导入sql语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-导入sql语句"}},[a._v("#")]),a._v(" 2.2.1.导入Sql语句")]),a._v(" "),t("p",[a._v("首先，将课前资料提供的"),t("code",[a._v("cloud-order.sql")]),a._v("和"),t("code",[a._v("cloud-user.sql")]),a._v("导入到mysql中：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713211417049.png",alt:"image-20210713211417049"}})]),a._v(" "),t("p",[a._v("cloud-user表中初始数据如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713211550169.png",alt:"image-20210713211550169"}})]),a._v(" "),t("p",[a._v("cloud-order表中初始数据如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713211657319.png",alt:"image-20210713211657319"}})]),a._v(" "),t("p",[a._v("cloud-order表中持有cloud-user表中的id字段。")]),a._v(" "),t("h3",{attrs:{id:"_2-2-2-导入demo工程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-导入demo工程"}},[a._v("#")]),a._v(" 2.2.2.导入demo工程")]),a._v(" "),t("p",[a._v("用IDEA导入课前资料提供的Demo：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713211814094.png",alt:"image-20210713211814094"}})]),a._v(" "),t("p",[a._v("项目结构如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713212656887.png",alt:"image-20210713212656887"}})]),a._v(" "),t("p",[a._v("导入后，会在IDEA右下角出现弹窗：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713212349272.png",alt:"image-20210713212349272"}})]),a._v(" "),t("p",[a._v("点击弹窗，然后按下图选择：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713212336185.png",alt:"image-20210713212336185"}})]),a._v(" "),t("p",[a._v("会出现这样的菜单：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713212513324.png",alt:"image-20210713212513324"}})]),a._v(" "),t("p",[a._v("配置下项目使用的JDK：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713220736408.png",alt:"image-20210713220736408"}})]),a._v(" "),t("h2",{attrs:{id:"_2-3-实现远程调用案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-实现远程调用案例"}},[a._v("#")]),a._v(" 2.3.实现远程调用案例")]),a._v(" "),t("p",[a._v("在order-service服务中，有一个根据id查询订单的接口：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713212749575.png",alt:"image-20210713212749575"}})]),a._v(" "),t("p",[a._v("根据id查询订单，返回值是Order对象，如图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713212901725.png",alt:"image-20210713212901725"}})]),a._v(" "),t("p",[a._v("其中的user为null")]),a._v(" "),t("p",[a._v("在user-service中有一个根据id查询用户的接口：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713213146089.png",alt:"image-20210713213146089"}})]),a._v(" "),t("p",[a._v("查询的结果如图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713213213075.png",alt:"image-20210713213213075"}})]),a._v(" "),t("h3",{attrs:{id:"_2-3-1-案例需求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-案例需求"}},[a._v("#")]),a._v(" 2.3.1.案例需求：")]),a._v(" "),t("p",[a._v("修改order-service中的根据id查询订单业务，要求在查询订单的同时，根据订单中包含的userId查询出用户信息，一起返回。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713213312278.png",alt:"image-20210713213312278"}})]),a._v(" "),t("p",[a._v("因此，我们需要在order-service中 向user-service发起一个http的请求，调用http://localhost:8081/user/{userId}这个接口。")]),a._v(" "),t("p",[a._v("大概的步骤是这样的：")]),a._v(" "),t("ul",[t("li",[a._v("注册一个RestTemplate的实例到Spring容器")]),a._v(" "),t("li",[a._v("修改order-service服务中的OrderService类中的queryOrderById方法，根据Order对象中的userId查询User")]),a._v(" "),t("li",[a._v("将查询的User填充到Order对象，一起返回")])]),a._v(" "),t("h3",{attrs:{id:"_2-3-2-注册resttemplate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-注册resttemplate"}},[a._v("#")]),a._v(" 2.3.2.注册RestTemplate")]),a._v(" "),t("p",[a._v("首先，我们在order-service服务中的OrderApplication启动类中，注册RestTemplate实例：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("cn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("itcast"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("order")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mybatis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("spring"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MapperScan")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringApplication")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("autoconfigure"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringBootApplication")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Bean")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("web"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RestTemplate")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@MapperScan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cn.itcast.order.mapper"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SpringBootApplication")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OrderApplication")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringApplication")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OrderApplication")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RestTemplate")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("restTemplate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RestTemplate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br")])]),t("h3",{attrs:{id:"_2-3-3-实现远程调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-实现远程调用"}},[a._v("#")]),a._v(" 2.3.3.实现远程调用")]),a._v(" "),t("p",[a._v("修改order-service服务中的cn.itcast.order.service包下的OrderService类中的queryOrderById方法：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713213959569.png",alt:"image-20210713213959569"}})]),a._v(" "),t("h2",{attrs:{id:"_2-4-提供者与消费者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-提供者与消费者"}},[a._v("#")]),a._v(" 2.4.提供者与消费者")]),a._v(" "),t("p",[a._v("在服务调用关系中，会有两个不同的角色：")]),a._v(" "),t("p",[t("strong",[a._v("服务提供者")]),a._v("：一次业务中，被其它微服务调用的服务。（提供接口给其它微服务）")]),a._v(" "),t("p",[t("strong",[a._v("服务消费者")]),a._v("：一次业务中，调用其它微服务的服务。（调用其它微服务提供的接口）")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713214404481.png",alt:"image-20210713214404481"}})]),a._v(" "),t("p",[a._v("但是，服务提供者与服务消费者的角色并不是绝对的，而是相对于业务而言。")]),a._v(" "),t("p",[a._v("如果服务A调用了服务B，而服务B又调用了服务C，服务B的角色是什么？")]),a._v(" "),t("ul",[t("li",[a._v("对于A调用B的业务而言：A是服务消费者，B是服务提供者")]),a._v(" "),t("li",[a._v("对于B调用C的业务而言：B是服务消费者，C是服务提供者")])]),a._v(" "),t("p",[a._v("因此，服务B既可以是服务提供者，也可以是服务消费者。")]),a._v(" "),t("h1",{attrs:{id:"_3-eureka注册中心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-eureka注册中心"}},[a._v("#")]),a._v(" 3.Eureka注册中心")]),a._v(" "),t("p",[a._v("假如我们的服务提供者user-service部署了多个实例，如图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713214925388.png",alt:"image-20210713214925388"}})]),a._v(" "),t("p",[a._v("大家思考几个问题：")]),a._v(" "),t("ul",[t("li",[a._v("order-service在发起远程调用的时候，该如何得知user-service实例的ip地址和端口？")]),a._v(" "),t("li",[a._v("有多个user-service实例地址，order-service调用时该如何选择？")]),a._v(" "),t("li",[a._v("order-service如何得知某个user-service实例是否依然健康，是不是已经宕机？")])]),a._v(" "),t("h2",{attrs:{id:"_3-1-eureka的结构和作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-eureka的结构和作用"}},[a._v("#")]),a._v(" 3.1.Eureka的结构和作用")]),a._v(" "),t("p",[a._v("这些问题都需要利用SpringCloud中的注册中心来解决，其中最广为人知的注册中心就是Eureka，其结构如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713220104956.png",alt:"image-20210713220104956"}})]),a._v(" "),t("p",[a._v("回答之前的各个问题。")]),a._v(" "),t("p",[a._v("问题1：order-service如何得知user-service实例地址？")]),a._v(" "),t("p",[a._v("获取地址信息的流程如下：")]),a._v(" "),t("ul",[t("li",[a._v("user-service服务实例启动后，将自己的信息注册到eureka-server（Eureka服务端）。这个叫服务注册")]),a._v(" "),t("li",[a._v("eureka-server保存服务名称到服务实例地址列表的映射关系")]),a._v(" "),t("li",[a._v("order-service根据服务名称，拉取实例地址列表。这个叫服务发现或服务拉取")])]),a._v(" "),t("p",[a._v("问题2：order-service如何从多个user-service实例中选择具体的实例？")]),a._v(" "),t("ul",[t("li",[a._v("order-service从实例列表中利用负载均衡算法选中一个实例地址")]),a._v(" "),t("li",[a._v("向该实例地址发起远程调用")])]),a._v(" "),t("p",[a._v("问题3：order-service如何得知某个user-service实例是否依然健康，是不是已经宕机？")]),a._v(" "),t("ul",[t("li",[a._v("user-service会每隔一段时间（默认30秒）向eureka-server发起请求，报告自己状态，称为心跳")]),a._v(" "),t("li",[a._v("当超过一定时间没有发送心跳时，eureka-server会认为微服务实例故障，将该实例从服务列表中剔除")]),a._v(" "),t("li",[a._v("order-service拉取服务时，就能将故障实例排除了")])]),a._v(" "),t("blockquote",[t("p",[a._v("注意：一个微服务，既可以是服务提供者，又可以是服务消费者，因此eureka将服务注册、服务发现等功能统一封装到了eureka-client端")])]),a._v(" "),t("p",[a._v("因此，接下来我们动手实践的步骤包括：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713220509769.png",alt:"image-20210713220509769"}})]),a._v(" "),t("h2",{attrs:{id:"_3-2-搭建eureka-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-搭建eureka-server"}},[a._v("#")]),a._v(" 3.2.搭建eureka-server")]),a._v(" "),t("p",[a._v("首先大家注册中心服务端：eureka-server，这必须是一个独立的微服务")]),a._v(" "),t("h3",{attrs:{id:"_3-2-1-创建eureka-server服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-创建eureka-server服务"}},[a._v("#")]),a._v(" 3.2.1.创建eureka-server服务")]),a._v(" "),t("p",[a._v("在cloud-demo父工程下，创建一个子模块：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713220605881.png",alt:"image-20210713220605881"}})]),a._v(" "),t("p",[a._v("填写模块信息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713220857396.png",alt:"image-20210713220857396"}})]),a._v(" "),t("p",[a._v("然后填写服务信息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713221339022.png",alt:"image-20210713221339022"}})]),a._v(" "),t("h3",{attrs:{id:"_3-2-2-引入eureka依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-引入eureka依赖"}},[a._v("#")]),a._v(" 3.2.2.引入eureka依赖")]),a._v(" "),t("p",[a._v("引入SpringCloud为eureka提供的starter依赖：")]),a._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-netflix-eureka-server"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"_3-2-3-编写启动类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-编写启动类"}},[a._v("#")]),a._v(" 3.2.3.编写启动类")]),a._v(" "),t("p",[a._v("给eureka-server服务编写一个启动类，一定要添加一个@EnableEurekaServer注解，开启eureka的注册中心功能：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("cn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("itcast"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringApplication")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("autoconfigure"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringBootApplication")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("cloud"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("netflix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("eureka"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("server"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("EnableEurekaServer")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SpringBootApplication")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@EnableEurekaServer")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("EurekaApplication")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringApplication")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("EurekaApplication")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])]),t("h3",{attrs:{id:"_3-2-4-编写配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-编写配置文件"}},[a._v("#")]),a._v(" 3.2.4.编写配置文件")]),a._v(" "),t("p",[a._v("编写一个application.yml文件，内容如下：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10086")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("application")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" eureka"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("server\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("client")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("service-url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" \n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("defaultZone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//127.0.0.1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("10086/eureka\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("h3",{attrs:{id:"_3-2-5-启动服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-启动服务"}},[a._v("#")]),a._v(" 3.2.5.启动服务")]),a._v(" "),t("p",[a._v("启动微服务，然后在浏览器访问：http://127.0.0.1:10086")]),a._v(" "),t("p",[a._v("看到下面结果应该是成功了：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713222157190.png",alt:"image-20210713222157190"}})]),a._v(" "),t("h2",{attrs:{id:"_3-3-服务注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-服务注册"}},[a._v("#")]),a._v(" 3.3.服务注册")]),a._v(" "),t("p",[a._v("下面，我们将user-service注册到eureka-server中去。")]),a._v(" "),t("h3",{attrs:{id:"_1-引入依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入依赖"}},[a._v("#")]),a._v(" 1）引入依赖")]),a._v(" "),t("p",[a._v("在user-service的pom文件中，引入下面的eureka-client依赖：")]),a._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-netflix-eureka-client"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"_2-配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置文件"}},[a._v("#")]),a._v(" 2）配置文件")]),a._v(" "),t("p",[a._v("在user-service中，修改application.yml文件，添加服务名称、eureka地址：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("application")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" userservice\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("client")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("service-url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("defaultZone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//127.0.0.1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("10086/eureka\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("h3",{attrs:{id:"_3-启动多个user-service实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动多个user-service实例"}},[a._v("#")]),a._v(" 3）启动多个user-service实例")]),a._v(" "),t("p",[a._v("为了演示一个服务有多个实例的场景，我们添加一个SpringBoot的启动配置，再启动一个user-service。")]),a._v(" "),t("p",[a._v("首先，复制原来的user-service启动配置：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713222656562.png",alt:"image-20210713222656562"}})]),a._v(" "),t("p",[a._v("然后，在弹出的窗口中，填写信息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713222757702.png",alt:"image-20210713222757702"}})]),a._v(" "),t("p",[a._v("现在，SpringBoot窗口会出现两个user-service启动配置：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713222841951.png",alt:"image-20210713222841951"}})]),a._v(" "),t("p",[a._v("不过，第一个是8081端口，第二个是8082端口。")]),a._v(" "),t("p",[a._v("启动两个user-service实例：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713223041491.png",alt:"image-20210713223041491"}})]),a._v(" "),t("p",[a._v("查看eureka-server管理页面：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713223150650.png",alt:"image-20210713223150650"}})]),a._v(" "),t("h2",{attrs:{id:"_3-4-服务发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-服务发现"}},[a._v("#")]),a._v(" 3.4.服务发现")]),a._v(" "),t("p",[a._v("下面，我们将order-service的逻辑修改：向eureka-server拉取user-service的信息，实现服务发现。")]),a._v(" "),t("h3",{attrs:{id:"_1-引入依赖-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入依赖-2"}},[a._v("#")]),a._v(" 1）引入依赖")]),a._v(" "),t("p",[a._v("之前说过，服务发现、服务注册统一都封装在eureka-client依赖，因此这一步与服务注册时一致。")]),a._v(" "),t("p",[a._v("在order-service的pom文件中，引入下面的eureka-client依赖：")]),a._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-netflix-eureka-client"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"_2-配置文件-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置文件-2"}},[a._v("#")]),a._v(" 2）配置文件")]),a._v(" "),t("p",[a._v("服务发现也需要知道eureka地址，因此第二步与服务注册一致，都是配置eureka信息：")]),a._v(" "),t("p",[a._v("在order-service中，修改application.yml文件，添加服务名称、eureka地址：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("application")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" orderservice\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("client")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("service-url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("defaultZone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//127.0.0.1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("10086/eureka\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("h3",{attrs:{id:"_3-服务拉取和负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务拉取和负载均衡"}},[a._v("#")]),a._v(" 3）服务拉取和负载均衡")]),a._v(" "),t("p",[a._v("最后，我们要去eureka-server中拉取user-service服务的实例列表，并且实现负载均衡。")]),a._v(" "),t("p",[a._v("不过这些动作不用我们去做，只需要添加一些注解即可。")]),a._v(" "),t("p",[a._v("在order-service的OrderApplication中，给RestTemplate这个Bean添加一个@LoadBalanced注解：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713224049419.png",alt:"image-20210713224049419"}})]),a._v(" "),t("p",[a._v("修改order-service服务中的cn.itcast.order.service包下的OrderService类中的queryOrderById方法。修改访问的url路径，用服务名代替ip、端口：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713224245731.png",alt:"image-20210713224245731"}})]),a._v(" "),t("p",[a._v("spring会自动帮助我们从eureka-server端，根据userservice这个服务名称，获取实例列表，而后完成负载均衡。")]),a._v(" "),t("h1",{attrs:{id:"_4-ribbon负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-ribbon负载均衡"}},[a._v("#")]),a._v(" 4.Ribbon负载均衡")]),a._v(" "),t("p",[a._v("上一节中，我们添加了@LoadBalanced注解，即可实现负载均衡功能，这是什么原理呢？")]),a._v(" "),t("h2",{attrs:{id:"_4-1-负载均衡原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-负载均衡原理"}},[a._v("#")]),a._v(" 4.1.负载均衡原理")]),a._v(" "),t("p",[a._v("SpringCloud底层其实是利用了一个名为Ribbon的组件，来实现负载均衡功能的。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713224517686.png",alt:"image-20210713224517686"}})]),a._v(" "),t("p",[a._v("那么我们发出的请求明明是http://userservice/user/1，怎么变成了http://localhost:8081的呢？")]),a._v(" "),t("h2",{attrs:{id:"_4-2-源码跟踪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-源码跟踪"}},[a._v("#")]),a._v(" 4.2.源码跟踪")]),a._v(" "),t("p",[a._v("为什么我们只输入了service名称就可以访问了呢？之前还要获取ip和端口。")]),a._v(" "),t("p",[a._v("显然有人帮我们根据service名称，获取到了服务实例的ip和端口。它就是"),t("code",[a._v("LoadBalancerInterceptor")]),a._v("，这个类会在对RestTemplate的请求进行拦截，然后从Eureka根据服务id获取服务列表，随后利用负载均衡算法得到真实的服务地址信息，替换服务id。")]),a._v(" "),t("p",[a._v("我们进行源码跟踪：")]),a._v(" "),t("h3",{attrs:{id:"_1-loadbalancerintercepor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-loadbalancerintercepor"}},[a._v("#")]),a._v(" 1）LoadBalancerIntercepor")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525620483637.png",alt:"1525620483637"}})]),a._v(" "),t("p",[a._v("可以看到这里的intercept方法，拦截了用户的HttpRequest请求，然后做了几件事：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("request.getURI()")]),a._v("：获取请求uri，本例中就是 http://user-service/user/8")]),a._v(" "),t("li",[t("code",[a._v("originalUri.getHost()")]),a._v("：获取uri路径的主机名，其实就是服务id，"),t("code",[a._v("user-service")])]),a._v(" "),t("li",[t("code",[a._v("this.loadBalancer.execute()")]),a._v("：处理服务id，和用户请求。")])]),a._v(" "),t("p",[a._v("这里的"),t("code",[a._v("this.loadBalancer")]),a._v("是"),t("code",[a._v("LoadBalancerClient")]),a._v("类型，我们继续跟入。")]),a._v(" "),t("h3",{attrs:{id:"_2-loadbalancerclient"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-loadbalancerclient"}},[a._v("#")]),a._v(" 2）LoadBalancerClient")]),a._v(" "),t("p",[a._v("继续跟入execute方法：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525620787090.png",alt:"1525620787090"}})]),a._v(" "),t("p",[a._v("代码是这样的：")]),a._v(" "),t("ul",[t("li",[a._v("getLoadBalancer(serviceId)：根据服务id获取ILoadBalancer，而ILoadBalancer会拿着服务id去eureka中获取服务列表并保存起来。")]),a._v(" "),t("li",[a._v("getServer(loadBalancer)：利用内置的负载均衡算法，从服务列表中选择一个。本例中，可以看到获取了8082端口的服务")])]),a._v(" "),t("p",[a._v("放行后，再次访问并跟踪，发现获取的是8081：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525620835911.png",alt:"1525620835911"}})]),a._v(" "),t("p",[a._v("果然实现了负载均衡。")]),a._v(" "),t("h3",{attrs:{id:"_3-负载均衡策略irule"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-负载均衡策略irule"}},[a._v("#")]),a._v(" 3）负载均衡策略IRule")]),a._v(" "),t("p",[a._v("在刚才的代码中，可以看到获取服务使通过一个"),t("code",[a._v("getServer")]),a._v("方法来做负载均衡:")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525620835911.png",alt:"1525620835911"}})]),a._v(" "),t("p",[a._v("我们继续跟入：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1544361421671.png",alt:"1544361421671"}})]),a._v(" "),t("p",[a._v("继续跟踪源码chooseServer方法，发现这么一段代码：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525622652849.png",alt:"1525622652849"}})]),a._v(" "),t("p",[a._v("我们看看这个rule是谁：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525622699666.png",alt:"1525622699666"}})]),a._v(" "),t("p",[a._v("这里的rule默认值是一个"),t("code",[a._v("RoundRobinRule")]),a._v("，看类的介绍：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/1525622754316.png",alt:"1525622754316"}})]),a._v(" "),t("p",[a._v("这不就是轮询的意思嘛。")]),a._v(" "),t("p",[a._v("到这里，整个负载均衡的流程我们就清楚了。")]),a._v(" "),t("h3",{attrs:{id:"_4-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结"}},[a._v("#")]),a._v(" 4）总结")]),a._v(" "),t("p",[a._v("SpringCloudRibbon的底层采用了一个拦截器，拦截了RestTemplate发出的请求，对地址做了修改。用一幅图来总结一下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713224724673.png",alt:"image-20210713224724673"}})]),a._v(" "),t("p",[a._v("基本流程如下：")]),a._v(" "),t("ul",[t("li",[a._v("拦截我们的RestTemplate请求http://userservice/user/1")]),a._v(" "),t("li",[a._v("RibbonLoadBalancerClient会从请求url中获取服务名称，也就是user-service")]),a._v(" "),t("li",[a._v("DynamicServerListLoadBalancer根据user-service到eureka拉取服务列表")]),a._v(" "),t("li",[a._v("eureka返回列表，localhost:8081、localhost:8082")]),a._v(" "),t("li",[a._v("IRule利用内置负载均衡规则，从列表中选择一个，例如localhost:8081")]),a._v(" "),t("li",[a._v("RibbonLoadBalancerClient修改请求地址，用localhost:8081替代userservice，得到http://localhost:8081/user/1，发起真实请求")])]),a._v(" "),t("h2",{attrs:{id:"_4-3-负载均衡策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-负载均衡策略"}},[a._v("#")]),a._v(" 4.3.负载均衡策略")]),a._v(" "),t("h3",{attrs:{id:"_4-3-1-负载均衡策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-负载均衡策略"}},[a._v("#")]),a._v(" 4.3.1.负载均衡策略")]),a._v(" "),t("p",[a._v("负载均衡的规则都定义在IRule接口中，而IRule有很多不同的实现类：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713225653000.png",alt:"image-20210713225653000"}})]),a._v(" "),t("p",[a._v("不同规则的含义如下：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("内置负载均衡规则类")])]),a._v(" "),t("th",[t("strong",[a._v("规则描述")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("RoundRobinRule")]),a._v(" "),t("td",[a._v("简单轮询服务列表来选择服务器。它是Ribbon默认的负载均衡规则。")])]),a._v(" "),t("tr",[t("td",[a._v("AvailabilityFilteringRule")]),a._v(" "),t("td",[a._v("对以下两种服务器进行忽略：   （1）在默认情况下，这台服务器如果3次连接失败，这台服务器就会被设置为“短路”状态。短路状态将持续30秒，如果再次连接失败，短路的持续时间就会几何级地增加。  （2）并发数过高的服务器。如果一个服务器的并发连接数过高，配置了AvailabilityFilteringRule规则的客户端也会将其忽略。并发连接数的上限，可以由客户端的<clientName>.<clientConfigNameSpace>.ActiveConnectionsLimit属性进行配置。")])]),a._v(" "),t("tr",[t("td",[a._v("WeightedResponseTimeRule")]),a._v(" "),t("td",[a._v("为每一个服务器赋予一个权重值。服务器响应时间越长，这个服务器的权重就越小。这个规则会随机选择服务器，这个权重值会影响服务器的选择。")])]),a._v(" "),t("tr",[t("td",[t("strong",[a._v("ZoneAvoidanceRule")])]),a._v(" "),t("td",[a._v("以区域可用的服务器为基础进行服务器的选择。使用Zone对服务器进行分类，这个Zone可以理解为一个机房、一个机架等。而后再对Zone内的多个服务做轮询。")])]),a._v(" "),t("tr",[t("td",[a._v("BestAvailableRule")]),a._v(" "),t("td",[a._v("忽略那些短路的服务器，并选择并发数较低的服务器。")])]),a._v(" "),t("tr",[t("td",[a._v("RandomRule")]),a._v(" "),t("td",[a._v("随机选择一个可用的服务器。")])]),a._v(" "),t("tr",[t("td",[a._v("RetryRule")]),a._v(" "),t("td",[a._v("重试机制的选择逻辑")])])])]),a._v(" "),t("p",[a._v("默认的实现就是ZoneAvoidanceRule，是一种轮询方案")]),a._v(" "),t("h3",{attrs:{id:"_4-3-2-自定义负载均衡策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-自定义负载均衡策略"}},[a._v("#")]),a._v(" 4.3.2.自定义负载均衡策略")]),a._v(" "),t("p",[a._v("通过定义IRule实现可以修改负载均衡规则，有两种方式：")]),a._v(" "),t("ol",[t("li",[a._v("代码方式：在order-service中的OrderApplication类中，定义一个新的IRule：")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IRule")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("randomRule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RandomRule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("配置文件方式：在order-service的application.yml文件中，添加新的配置也可以修改规则：")])]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("userservice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 给某个微服务配置负载均衡规则，这里是userservice服务")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ribbon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NFLoadBalancerRuleClassName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.netflix.loadbalancer.RandomRule "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 负载均衡规则 ")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("blockquote",[t("p",[t("strong",[a._v("注意")]),a._v("，一般用默认的负载均衡规则，不做修改。")])]),a._v(" "),t("h2",{attrs:{id:"_4-4-饥饿加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-饥饿加载"}},[a._v("#")]),a._v(" 4.4.饥饿加载")]),a._v(" "),t("p",[a._v("Ribbon默认是采用懒加载，即第一次访问时才会去创建LoadBalanceClient，请求时间会很长。")]),a._v(" "),t("p",[a._v("而饥饿加载则会在项目启动时创建，降低第一次访问的耗时，通过下面配置开启饥饿加载：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ribbon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eager-load")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("clients")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" userservice\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h1",{attrs:{id:"_5-nacos注册中心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-nacos注册中心"}},[a._v("#")]),a._v(" 5.Nacos注册中心")]),a._v(" "),t("p",[a._v("国内公司一般都推崇阿里巴巴的技术，比如注册中心，SpringCloudAlibaba也推出了一个名为Nacos的注册中心。")]),a._v(" "),t("h2",{attrs:{id:"_5-1-认识和安装nacos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-认识和安装nacos"}},[a._v("#")]),a._v(" 5.1.认识和安装Nacos")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://nacos.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Nacos"),t("OutboundLink")],1),a._v("是阿里巴巴的产品，现在是"),t("a",{attrs:{href:"https://spring.io/projects/spring-cloud",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringCloud"),t("OutboundLink")],1),a._v("中的一个组件。相比"),t("a",{attrs:{href:"https://github.com/Netflix/eureka",target:"_blank",rel:"noopener noreferrer"}},[a._v("Eureka"),t("OutboundLink")],1),a._v("功能更加丰富，在国内受欢迎程度较高。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713230444308.png",alt:"image-20210713230444308"}})]),a._v(" "),t("p",[a._v("安装方式可以参考课前资料《Nacos安装指南.md》")]),a._v(" "),t("h2",{attrs:{id:"_5-2-服务注册到nacos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-服务注册到nacos"}},[a._v("#")]),a._v(" 5.2.服务注册到nacos")]),a._v(" "),t("p",[a._v("Nacos是SpringCloudAlibaba的组件，而SpringCloudAlibaba也遵循SpringCloud中定义的服务注册、服务发现规范。因此使用Nacos和使用Eureka对于微服务来说，并没有太大区别。")]),a._v(" "),t("p",[a._v("主要差异在于：")]),a._v(" "),t("ul",[t("li",[a._v("依赖不同")]),a._v(" "),t("li",[a._v("服务地址不同")])]),a._v(" "),t("h3",{attrs:{id:"_1-引入依赖-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入依赖-3"}},[a._v("#")]),a._v(" 1）引入依赖")]),a._v(" "),t("p",[a._v("在cloud-demo父工程的pom文件中的"),t("code",[a._v("<dependencyManagement>")]),a._v("中引入SpringCloudAlibaba的依赖：")]),a._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.alibaba.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-alibaba-dependencies"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("2.2.6.RELEASE"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("pom"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("import"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("scope")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[a._v("然后在user-service和order-service中的pom文件中引入nacos-discovery依赖：")]),a._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("com.alibaba.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-cloud-starter-alibaba-nacos-discovery"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("blockquote",[t("p",[t("strong",[a._v("注意")]),a._v("：不要忘了注释掉eureka的依赖。")])]),a._v(" "),t("h3",{attrs:{id:"_2-配置nacos地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置nacos地址"}},[a._v("#")]),a._v(" 2）配置nacos地址")]),a._v(" "),t("p",[a._v("在user-service和order-service的application.yml中添加nacos地址：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server-addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8848")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("blockquote",[t("p",[t("strong",[a._v("注意")]),a._v("：不要忘了注释掉eureka的地址")])]),a._v(" "),t("h3",{attrs:{id:"_3-重启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-重启"}},[a._v("#")]),a._v(" 3）重启")]),a._v(" "),t("p",[a._v("重启微服务后，登录nacos管理页面，可以看到微服务信息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713231439607.png",alt:"image-20210713231439607"}})]),a._v(" "),t("h2",{attrs:{id:"_5-3-服务分级存储模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-服务分级存储模型"}},[a._v("#")]),a._v(" 5.3.服务分级存储模型")]),a._v(" "),t("p",[a._v("一个"),t("strong",[a._v("服务")]),a._v("可以有多个"),t("strong",[a._v("实例")]),a._v("，例如我们的user-service，可以有:")]),a._v(" "),t("ul",[t("li",[a._v("127.0.0.1:8081")]),a._v(" "),t("li",[a._v("127.0.0.1:8082")]),a._v(" "),t("li",[a._v("127.0.0.1:8083")])]),a._v(" "),t("p",[a._v("假如这些实例分布于全国各地的不同机房，例如：")]),a._v(" "),t("ul",[t("li",[a._v("127.0.0.1:8081，在上海机房")]),a._v(" "),t("li",[a._v("127.0.0.1:8082，在上海机房")]),a._v(" "),t("li",[a._v("127.0.0.1:8083，在杭州机房")])]),a._v(" "),t("p",[a._v("Nacos就将同一机房内的实例 划分为一个"),t("strong",[a._v("集群")]),a._v("。")]),a._v(" "),t("p",[a._v("也就是说，user-service是服务，一个服务可以包含多个集群，如杭州、上海，每个集群下可以有多个实例，形成分级模型，如图：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713232522531.png",alt:"image-20210713232522531"}})]),a._v(" "),t("p",[a._v("微服务互相访问时，应该尽可能访问同集群实例，因为本地访问速度更快。当本集群内不可用时，才访问其它集群。例如：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713232658928.png",alt:"image-20210713232658928"}})]),a._v(" "),t("p",[a._v("杭州机房内的order-service应该优先访问同机房的user-service。")]),a._v(" "),t("h3",{attrs:{id:"_5-3-1-给user-service配置集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-给user-service配置集群"}},[a._v("#")]),a._v(" 5.3.1.给user-service配置集群")]),a._v(" "),t("p",[a._v("修改user-service的application.yml文件，添加集群配置：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server-addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8848")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("discovery")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cluster-name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" HZ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 集群名称")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("重启两个user-service实例后，我们可以在nacos控制台看到下面结果：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713232916215.png",alt:"image-20210713232916215"}})]),a._v(" "),t("p",[a._v("我们再次复制一个user-service启动配置，添加属性：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Dserver.port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8083")]),a._v(" -Dspring.cloud.nacos.discovery.cluster-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("SH\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("配置如图所示：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713233528982.png",alt:"image-20210713233528982"}})]),a._v(" "),t("p",[a._v("启动UserApplication3后再次查看nacos控制台：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713233727923.png",alt:"image-20210713233727923"}})]),a._v(" "),t("h3",{attrs:{id:"_5-3-2-同集群优先的负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-同集群优先的负载均衡"}},[a._v("#")]),a._v(" 5.3.2.同集群优先的负载均衡")]),a._v(" "),t("p",[a._v("默认的"),t("code",[a._v("ZoneAvoidanceRule")]),a._v("并不能实现根据同集群优先来实现负载均衡。")]),a._v(" "),t("p",[a._v("因此Nacos中提供了一个"),t("code",[a._v("NacosRule")]),a._v("的实现，可以优先从同集群中挑选实例。")]),a._v(" "),t("p",[a._v("1）给order-service配置集群信息")]),a._v(" "),t("p",[a._v("修改order-service的application.yml文件，添加集群配置：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("spring:\n  cloud:\n    nacos:\n      server-addr: localhost:8848\n      discovery:\n        cluster-name: HZ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 集群名称")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("2）修改负载均衡规则")]),a._v(" "),t("p",[a._v("修改order-service的application.yml文件，修改负载均衡规则：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("userservice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ribbon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NFLoadBalancerRuleClassName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.alibaba.cloud.nacos.ribbon.NacosRule "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 负载均衡规则 ")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"_5-4-权重配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-权重配置"}},[a._v("#")]),a._v(" 5.4.权重配置")]),a._v(" "),t("p",[a._v("实际部署中会出现这样的场景：")]),a._v(" "),t("p",[a._v("服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，我们希望性能好的机器承担更多的用户请求。")]),a._v(" "),t("p",[a._v("但默认情况下NacosRule是同集群内随机挑选，不会考虑机器的性能问题。")]),a._v(" "),t("p",[a._v("因此，Nacos提供了权重配置来控制访问频率，权重越大则访问频率越高。")]),a._v(" "),t("p",[a._v("在nacos控制台，找到user-service的实例列表，点击编辑，即可修改权重：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713235133225.png",alt:"image-20210713235133225"}})]),a._v(" "),t("p",[a._v("在弹出的编辑窗口，修改权重：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210713235235219.png",alt:"image-20210713235235219"}})]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("注意")]),a._v("：如果权重修改为0，则该实例永远不会被访问")])]),a._v(" "),t("h2",{attrs:{id:"_5-5-环境隔离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-环境隔离"}},[a._v("#")]),a._v(" 5.5.环境隔离")]),a._v(" "),t("p",[a._v("Nacos提供了namespace来实现环境隔离功能。")]),a._v(" "),t("ul",[t("li",[a._v("nacos中可以有多个namespace")]),a._v(" "),t("li",[a._v("namespace下可以有group、service等")]),a._v(" "),t("li",[a._v("不同namespace之间相互隔离，例如不同namespace的服务互相不可见")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000101516.png",alt:"image-20210714000101516"}})]),a._v(" "),t("h3",{attrs:{id:"_5-5-1-创建namespace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-1-创建namespace"}},[a._v("#")]),a._v(" 5.5.1.创建namespace")]),a._v(" "),t("p",[a._v("默认情况下，所有service、data、group都在同一个namespace，名为public：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000414781.png",alt:"image-20210714000414781"}})]),a._v(" "),t("p",[a._v("我们可以点击页面新增按钮，添加一个namespace：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000440143.png",alt:"image-20210714000440143"}})]),a._v(" "),t("p",[a._v("然后，填写表单：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000505928.png",alt:"image-20210714000505928"}})]),a._v(" "),t("p",[a._v("就能在页面看到一个新的namespace：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000522913.png",alt:"image-20210714000522913"}})]),a._v(" "),t("h3",{attrs:{id:"_5-5-2-给微服务配置namespace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-2-给微服务配置namespace"}},[a._v("#")]),a._v(" 5.5.2.给微服务配置namespace")]),a._v(" "),t("p",[a._v("给微服务配置namespace只能通过修改配置来实现。")]),a._v(" "),t("p",[a._v("例如，修改order-service的application.yml文件：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server-addr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8848")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("discovery")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cluster-name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" HZ\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 492a7d5d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("237b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("46a1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("a99a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("fa8e98e4b0f9 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 命名空间，填ID")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[a._v("重启order-service后，访问控制台，可以看到下面的结果：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000830703.png",alt:"image-20210714000830703"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000837140.png",alt:"image-20210714000837140"}})]),a._v(" "),t("p",[a._v("此时访问order-service，因为namespace不同，会导致找不到userservice，控制台会报错：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714000941256.png",alt:"image-20210714000941256"}})]),a._v(" "),t("h2",{attrs:{id:"_5-6-nacos与eureka的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-nacos与eureka的区别"}},[a._v("#")]),a._v(" 5.6.Nacos与Eureka的区别")]),a._v(" "),t("p",[a._v("Nacos的服务实例分为两种l类型：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("临时实例：如果实例宕机超过一定时间，会从服务列表剔除，默认的类型。")])]),a._v(" "),t("li",[t("p",[a._v("非临时实例：如果实例宕机，不会从服务列表剔除，也可以叫永久实例。")])])]),a._v(" "),t("p",[a._v("配置一个服务实例为永久实例：")]),a._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("cloud")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nacos")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("discovery")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ephemeral")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置为非临时实例")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("Nacos和Eureka整体结构类似，服务注册、服务拉取、心跳等待，但是也存在一些差异：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210714001728017.png",alt:"image-20210714001728017"}})]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Nacos与eureka的共同点")]),a._v(" "),t("ul",[t("li",[a._v("都支持服务注册和服务拉取")]),a._v(" "),t("li",[a._v("都支持服务提供者心跳方式做健康检测")])])]),a._v(" "),t("li",[t("p",[a._v("Nacos与Eureka的区别")]),a._v(" "),t("ul",[t("li",[a._v("Nacos支持服务端主动检测提供者状态：临时实例采用心跳模式，非临时实例采用主动检测模式")]),a._v(" "),t("li",[a._v("临时实例心跳不正常会被剔除，非临时实例则不会被剔除")]),a._v(" "),t("li",[a._v("Nacos支持服务列表变更的消息推送模式，服务列表更新更及时")]),a._v(" "),t("li",[a._v("Nacos集群默认采用AP方式，当集群中存在非临时实例时，采用CP模式；Eureka采用AP方式")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);
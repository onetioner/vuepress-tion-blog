(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{555:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"scala第三章节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scala第三章节"}},[t._v("#")]),t._v(" Scala第三章节")]),t._v(" "),s("h3",{attrs:{id:"章节目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#章节目标"}},[t._v("#")]),t._v(" 章节目标")]),t._v(" "),s("ol",[s("li",[t._v("理解运算符的相关概述")]),t._v(" "),s("li",[t._v("掌握算术, 赋值, 关系, 逻辑运算符的用法")]),t._v(" "),s("li",[t._v("掌握交换变量案例")]),t._v(" "),s("li",[t._v("理解位运算符的用法")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-算术运算符"}},[t._v("#")]),t._v(" 1. 算术运算符")]),t._v(" "),s("h4",{attrs:{id:"_1-1-运算符简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-运算符简介"}},[t._v("#")]),t._v(" 1.1 运算符简介")]),t._v(" "),s("p",[t._v("用来拼接变量或者常量的符号就叫: 运算符, 而通过运算符连接起来的式子就叫: 表达式. 实际开发中, 我们会经常用到它.")]),t._v(" "),s("p",[t._v("例如:")]),t._v(" "),s("p",[t._v("​\t10 + 3 这个就是一个表达式,  而+号, 就是一个运算符.")]),t._v(" "),s("p",[t._v("​\t"),s("code",[t._v("注意: 在Scala中, 运算符并不仅仅是运算符, 也是函数的一种, 这点大家先了解即可, 后续我们详细讲解.")])]),t._v(" "),s("h4",{attrs:{id:"_1-2-运算符的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-运算符的分类"}},[t._v("#")]),t._v(" 1.2 运算符的分类")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("算术运算符")])]),t._v(" "),s("li",[s("p",[t._v("赋值运算符")])]),t._v(" "),s("li",[s("p",[t._v("关系运算符")])]),t._v(" "),s("li",[s("p",[t._v("逻辑运算符")])]),t._v(" "),s("li",[s("p",[t._v("位运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("注意: Scala中是没有三元运算符的, 被if-else给替代了.")])])])]),t._v(" "),s("h4",{attrs:{id:"_1-3-算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-算术运算符"}},[t._v("#")]),t._v(" 1.3 算术运算符")]),t._v(" "),s("p",[t._v("算术运算符指的就是"),s("code",[t._v("用来进行算术操作的符号")]),t._v(",  常用的有以下几种:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",[t._v("功能解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),s("td",[t._v("加号, 功能有3点.   1) 表示正数    2) 普通的加法操作    3) 字符串的拼接")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),s("td",[t._v("减号, 功能有2点.    1) 表示负数   2) 普通的减法操作")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),s("td",[t._v("乘号,  用于获取两个数据的乘积")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("/")]),t._v(" "),s("td",[t._v("除法,  用于获取两个数据的商")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("%")]),t._v(" "),s("td",[t._v("取余(也叫取模),  用于获取两个数据的余数")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Scala中是没有++, --这两个算术运算符的,  这点和Java中不同.")])]),t._v(" "),s("li",[s("p",[t._v("整数相除的结果, 还是整数. 如果想获取到小数, 则必须有浮点型数据参与.")]),t._v(" "),s("p",[s("code",[t._v("例如: 10 / 3 结果是3 10 / 3.0 结果是: 3.3333(无限循环)")])])]),t._v(" "),s("li",[s("p",[t._v("关于+号拼接字符串:  任意类型的数据和字符串拼接, 结果都将是一个新的字符串.")])]),t._v(" "),s("li",[s("p",[t._v("关于%操作, 假设求"),s("code",[t._v("a % b")]),t._v("的值, 它的底层原理其实是:  "),s("code",[t._v("a - a/b * b")])])])])]),t._v(" "),s("h4",{attrs:{id:"_1-4-代码演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-代码演示"}},[t._v("#")]),t._v(" 1.4 代码演示")]),t._v(" "),s("p",[t._v("需求: 演示算术运算符的常见操作.")]),t._v(" "),s("p",[t._v("参考代码:")]),t._v(" "),s("div",{staticClass:"language-scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//演示+号操作")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//演示-号操作")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//演示*号操作")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其实就是把 “-” copy 3次")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//演示/号操作")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.3333333333333335（精度问题）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//演示%(取余)操作（这会注意）")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是1, 具体运算过程: 10 - 10/3 * 3   = 10 - 3 * 3   = 1")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是1, 具体运算过程: 10 - 10/-3 * -3 = 10 - -3 * -3 = 10 - 9  =  1")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是-1, 具体运算过程: -10 - -10/3 * 3 = -10 - -3 * 3 = -10 + 9 = -1 ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("h3",{attrs:{id:"_2-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-赋值运算符"}},[t._v("#")]),t._v(" 2. 赋值运算符")]),t._v(" "),s("h4",{attrs:{id:"_2-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-概述"}},[t._v("#")]),t._v(" 2.1 概述")]),t._v(" "),s("p",[t._v("赋值运算符指的就是"),s("code",[t._v("用来进行赋值操作的符号")]),t._v(".   例如: 把一个常量值, 或者一个变量值甚至是某一段代码的执行结果赋值给变量, 这些都要用到赋值运算符.")]),t._v(" "),s("h4",{attrs:{id:"_2-2-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-分类"}},[t._v("#")]),t._v(" 2.2 分类")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("赋值运算符常用的有两类")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基本赋值运算符")]),t._v(" "),s("p",[s("code",[t._v("=")]),t._v("就是基本的赋值运算符,   例如:  var a:Int = 3,  就是把常量值3赋值给变量a")])]),t._v(" "),s("li",[s("p",[t._v("扩展赋值运算符")]),t._v(" "),s("p",[s("code",[t._v("+=, -=, *=, /=, %=")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("赋值运算符的左边必须是: 变量,  不能是常量.    例如:  3 = 5,   这种写法就是错误的.")])]),t._v(" "),s("li",[s("p",[t._v("关于扩展赋值运算符, 其实就是把左边的数据和右边的数据进行指定的操作, 然后把结果赋值给左边.")]),t._v(" "),s("p",[s("code",[t._v("例如; a += 3 就是把变量a的值和常量3进行加法操作, 然后把结果赋值给变量a")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"_2-3-代码演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-代码演示"}},[t._v("#")]),t._v(" 2.3 代码演示")]),t._v(" "),s("div",{staticClass:"language-Scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将常量值1赋值给变量a")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意: 因为后续代码要修改变量a的值, 所以变量a要用var修饰")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对变量a进行加3操作, 然后把结果重新赋值给变量a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的最终结果为: a = 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对变量a进行减2操作, 然后把结果重新赋值给变量a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的最终结果为: a = 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对变量a进行乘3操作, 然后把结果重新赋值给变量a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的最终结果为: a = 6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对变量a进行除2操作, 然后把结果重新赋值给变量a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的最终结果为: a = 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对变量a和2进行取余操作, 然后把结果重新赋值给变量a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a的最终结果为: a = 1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h3",{attrs:{id:"_3-关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-关系运算符"}},[t._v("#")]),t._v(" 3. 关系运算符")]),t._v(" "),s("h4",{attrs:{id:"_3-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-概述"}},[t._v("#")]),t._v(" 3.1 概述")]),t._v(" "),s("p",[t._v("关系运算符指的就是"),s("code",[t._v("用来进行比较操作的符号")]),t._v(".  例如: 数据是否相等, 是否不等, 数据1大还是数据2大...等这些操作.")]),t._v(" "),s("h4",{attrs:{id:"_3-2-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-分类"}},[t._v("#")]),t._v(" 3.2 分类")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("功能解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("用来判断前边的数据"),s("code",[t._v("是否大于")]),t._v("后边的数据")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("用来判断前边的数据"),s("code",[t._v("是否大于或者等于")]),t._v("后边的数据")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("用来判断前边的数据"),s("code",[t._v("是否小于")]),t._v("后边的数据")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("用来判断前边的数据"),s("code",[t._v("是否小于或者等于")]),t._v("后边的数据")])]),t._v(" "),s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("用来判断两个数据"),s("code",[t._v("是否相等")])])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",[t._v("用来判断两个数据"),s("code",[t._v("是否不等")])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("ol",[s("li",[t._v("关系表达式不管简单还是复杂, 最终结果一定是Boolean类型的值, 要么是true, 要么是false.")]),t._v(" "),s("li",[t._v("千万不要把==写成=, 否则结果可能不是你想要的.")])])]),t._v(" "),s("h4",{attrs:{id:"_3-3-代码演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-代码演示"}},[t._v("#")]),t._v(" 3.3 代码演示")]),t._v(" "),s("div",{staticClass:"language-scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义两个Int类型的变量a, b, 分别赋值为3, 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断a是否大于b, 并打印结果\t")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断a是否大于等于b, 并打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断a是否小于b, 并打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断a是否小于等于b, 并打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断a和b是否不等, 并打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断a和b是否相等, 并打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果把==写成了=, 其实是把变量b的值赋值给变量a")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//输出结果是一对小括号"()", 即: 没有打印值.')]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再次打印变量a, 打印结果是:5")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("h4",{attrs:{id:"_3-4-关系运算符延伸"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-关系运算符延伸"}},[t._v("#")]),t._v(" 3.4 关系运算符延伸")]),t._v(" "),s("p",[t._v("学过Java的同学会发现, 上述的Scala中的关系运算符用法和Java中是一样的,  那有和Java不一样的地方吗?")]),t._v(" "),s("p",[t._v("答案是: 有.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("需求描述")]),t._v(" "),s("th",[t._v("Scala代码")]),t._v(" "),s("th",[t._v("Java代码")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("比较数据值")]),t._v(" "),s("td",[t._v("== 或者 !=")]),t._v(" "),s("td",[t._v("equals()方法")])]),t._v(" "),s("tr",[s("td",[t._v("比较引用值(地址值)")]),t._v(" "),s("td",[t._v("eq方法")]),t._v(" "),s("td",[t._v("== 或者 !=")])])])]),t._v(" "),s("p",[s("strong",[t._v("示例")])]),t._v(" "),s("p",[t._v('有一个字符串"abc"，再创建第二个字符串，值为：在第一个字符串后拼接一个空字符串。')]),t._v(" "),s("p",[t._v("然后使用比较这两个字符串是否相等、再查看它们的引用值是否相等。")]),t._v(" "),s("p",[s("strong",[t._v("参考代码")])]),t._v(" "),s("div",{staticClass:"language-scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\ns1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s2     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是: true,  因为比较的是 数据值")]),t._v("\ns1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果是: false, 因为比较的是 地址值")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"_4-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-逻辑运算符"}},[t._v("#")]),t._v(" 4. 逻辑运算符")]),t._v(" "),s("h4",{attrs:{id:"_4-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-概述"}},[t._v("#")]),t._v(" 4.1 概述")]),t._v(" "),s("p",[t._v("逻辑运算符指的就是"),s("code",[t._v("用来进行逻辑操作的符号")]),t._v(".  可以简单理解为它是: 组合判断. 例如: 判断多个条件是否都满足, 或者满足其中的某一个, 甚至还可以对某个判断结果进行取反操作.")]),t._v(" "),s("h4",{attrs:{id:"_4-2-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-分类"}},[t._v("#")]),t._v(" 4.2 分类")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("功能解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("逻辑与,  要求所有条件都满足(即: 结果为true),  简单记忆: 有false则整体为false.")])]),t._v(" "),s("tr",[s("td",[t._v("||")]),t._v(" "),s("td",[t._v("逻辑或,  要求只要满足任意一个条件即可,  简单记忆: 有true则整体为true.")])]),t._v(" "),s("tr",[s("td",[t._v("!")]),t._v(" "),s("td",[t._v("逻辑非, 用来进行取反操作的. 即: 以前为true, 取反后为false, 以前为false, 取反后为true.")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("ol",[s("li",[t._v("逻辑表达式不管简单还是复杂, 最终结果一定是Boolean类型的值, 要么是true, 要么是false.")]),t._v(" "),s("li",[t._v("在Scala代码中, 不能对一个Boolean类型的数据进行"),s("strong",[t._v("连续取反")]),t._v("操作,  但是在Java中是可以的.\n"),s("ul",[s("li",[t._v("即:   !!false,  这样写会报错, 不支持这种写法.")])])])])]),t._v(" "),s("h4",{attrs:{id:"_4-3-代码演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-代码演示"}},[t._v("#")]),t._v(" 4.3 代码演示")]),t._v(" "),s("div",{staticClass:"language-scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//相当于: false && true")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//我们可以简写代码为:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//逻辑与: 有false则整体为false.")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: false")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: false")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: false")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: true")]),t._v("\n\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: true")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: true")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: false")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: true")]),t._v("\n\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: true")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: false")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这样写会报错, Scala不支持这种写法, 但是Java代码支持这种写法.")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h3",{attrs:{id:"_5-位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-位运算符"}},[t._v("#")]),t._v(" 5. 位运算符")]),t._v(" "),s("h4",{attrs:{id:"_5-1-铺垫知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-铺垫知识"}},[t._v("#")]),t._v(" 5.1 铺垫知识")]),t._v(" "),s("p",[t._v("要想学好"),s("code",[t._v("位运算符")]),t._v(", 你必须得知道三个知识点:")]),t._v(" "),s("ol",[s("li",[t._v("什么是进制")]),t._v(" "),s("li",[t._v("什么是8421码")]),t._v(" "),s("li",[t._v("整数的原码, 反码, 补码计算规则")])]),t._v(" "),s("h5",{attrs:{id:"_5-1-1-关于进制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-关于进制"}},[t._v("#")]),t._v(" 5.1.1 关于进制")]),t._v(" "),s("p",[t._v("通俗的讲, 逢几进一就是几进制, 例如: 逢二进一就是二进制, 逢十进一就是十进制, 常用的进制有以下几种:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("进制名称")]),t._v(" "),s("th",[t._v("数据组成规则")]),t._v(" "),s("th",[t._v("示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("二进制")]),t._v(" "),s("td",[t._v("数据以0b(大小写均可)开头, 由数字0和1组成")]),t._v(" "),s("td",[t._v("0b10001001, 0b00101010")])]),t._v(" "),s("tr",[s("td",[t._v("八进制")]),t._v(" "),s("td",[t._v("数据以0开头, 由数字0~7组成")]),t._v(" "),s("td",[t._v("064,  011")])]),t._v(" "),s("tr",[s("td",[t._v("十进制")]),t._v(" "),s("td",[t._v("数据直接写即可,  无特殊开头, 由数字0~9组成")]),t._v(" "),s("td",[t._v("10, 20, 333")])]),t._v(" "),s("tr",[s("td",[t._v("十六进制")]),t._v(" "),s("td",[t._v("数据以0x(大小写均可)开头,  由数字0~9, 字母A-F组成(大小写均可)")]),t._v(" "),s("td",[t._v("0x123F, 0x66ABC")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("p",[t._v("​\t关于二进制的数据,  最前边的那一位叫: 符号位, 0表示正数, 1表示负数.  其他位叫: 数值位.")]),t._v(" "),s("p",[t._v("​\t例如: 0b10001001 结果就是一个: 负数,   0b00101010 结果就是一个:  正数.")])]),t._v(" "),s("h5",{attrs:{id:"_5-1-2-关于8421码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-关于8421码"}},[t._v("#")]),t._v(" 5.1.2 关于8421码")]),t._v(" "),s("p",[t._v("8421码就是用来描述"),s("code",[t._v("二进制位和十进制数据之间的关系的")]),t._v(", 它可以帮助我们快速的计算数据的二进制或十进制形式.")]),t._v(" "),s("p",[t._v("8421码对应关系如下:（1byte(字节) = 8bit(比特位)）")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("二进制位")]),t._v("\t\t\t\t\t\t0\t   0\t  0      0\t 0\t 0   0\t0")]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("对应的十进制数据")]),t._v("\t   128   64\t32\t16\t8\t 4\t2\t1")]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("ol",[s("li",[t._v("计算规则:  二进制位从右往左数, 每多一位, 对应的十进制数据 乘以2.")]),t._v(" "),s("li",[t._v("二进制和十进制相互转换的小技巧:")])]),t._v(" "),s("ul",[s("li",[t._v("二进制转十进制:  获取该二进制位对应的十进制数据, 然后累加即可.")]),t._v(" "),s("li",[t._v("例如: 0b101对应的十进制数据计算步骤:  4 + 0 + 1 = 5")]),t._v(" "),s("li",[t._v("十进制转二进制:  对十进制数据进行拆解, 看哪些数字相加等于它, 然后标记成二进制即可.\n"),s("ul",[s("li",[t._v("例如: 10 对应的二进制数据计算步骤: 10 = 8 + 2  =   0b1010")])])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("二进制数据转换成十进制形式的数据：【获取该二进制位对应的十进制数据, 然后累加即可】\n例如：\n\t0b00001010\t->\t8 + 2 = 10\n\t0b011\t\t->\t2 + 1 = 3\n\n十进制数据转换成二进制形式的数据：【对十进制数据进行拆解, 看哪些数字相加等于它, 然后标记成二进制即可】\n例如：\n\t6\t-> 4 + 2\t\t-> 0b0000 0110\n\t21\t-> 16 + 4 + 1\t-> 0b0001 0101\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h5",{attrs:{id:"_5-1-3-关于整数的原反补码计算规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-关于整数的原反补码计算规则"}},[t._v("#")]),t._v(" 5.1.3 关于整数的原反补码计算规则")]),t._v(" "),s("p",[t._v("所谓的原反补码, 其实指的都是二进制数据, 把十进制的数据转成其对应的二进制数据, 该二进制数据即为: 原码.")]),t._v(" "),s("blockquote",[s("p",[t._v("注意: 计算机底层存储, 操作和运算数据, 都是采用"),s("code",[t._v("数据的二进制补码形式")]),t._v("来实现的.")])]),t._v(" "),s("ul",[s("li",[t._v("正数\n"),s("ul",[s("li",[t._v("正数的原码, 反码, 补码都一样, 不需要特殊计算.")])])]),t._v(" "),s("li",[t._v("负数\n"),s("ul",[s("li",[t._v("负数的反码计算规则:  原码的符号位不变, 数值位按位取反(以前为0现在为1, 以前为1现在为0)")]),t._v(" "),s("li",[t._v("负数的补码计算规则:  反码 + 1")])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("原反补码：\n\t正数：【原反补码都一致】\n\t\t例如：\n\t\t\t5 -> 0b0000 0101\n\t负数：\n\t\t1. 原码：将十进制形式的数据直接转换成二进制即可\n\t\t2. 反码：符号位不变，数值位按位取反\n\t\t3. 补码：反码 + 1\n\t\t\n\t\t例如：\n\t\t\t-5 -> 0b1000 0101(原码) -> 0b1111 1010(反码) -> 0b1111 1011(补码)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"_5-2-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-概述"}},[t._v("#")]),t._v(" 5.2 概述")]),t._v(" "),s("p",[t._v("位运算符指的就是"),s("code",[t._v("按照位(Bit)来快速操作数据值")]),t._v(", 它只针对于整型数据.  因为计算机底层存储, 操作, 运算采用的都是数据的二进制补码形式, 且以后我们要经常和海量的数据打交道, 为了提高计算效率, 我们就可以使用位运算符来实现快速修改数据值的操作.")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("win+R -> osk  -> 虚拟键盘\nwin+R -> calc -> 计算器\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h4",{attrs:{id:"_5-3-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-分类"}},[t._v("#")]),t._v(" 5.3 分类")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("功能解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&")]),t._v(" "),s("td",[t._v("按位与,  规则: 有0则0,  都为1则为1.【把0理解为false，1理解为true】")])]),t._v(" "),s("tr",[s("td",[t._v("|")]),t._v(" "),s("td",[t._v("按位或,  规则: 有1则1,  都为0则为0.")])]),t._v(" "),s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("按位异或, 规则: 相同为0, 不同为1.")])]),t._v(" "),s("tr",[s("td",[t._v("~")]),t._v(" "),s("td",[t._v("按位取反, 规则: 0变1, 1变0.")])]),t._v(" "),s("tr",[s("td",[t._v("<<")]),t._v(" "),s("td",[t._v("按位左移, 规则: 每左移一位, 相当于该数据乘2, 例如:  2 << 1, 结果为4")])]),t._v(" "),s("tr",[s("td",[t._v(">>")]),t._v(" "),s("td",[t._v("按位右移, 规则: 每右移一位, 相当于该数据除2, 例如:  6 >> 1, 结果为3")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意:")]),t._v(" "),s("ol",[s("li",[t._v("位运算符只针对于"),s("strong",[t._v("整型数据.")])]),t._v(" "),s("li",[t._v("运算符操作的是数据的"),s("strong",[t._v("二进制补码")]),t._v("形式.")]),t._v(" "),s("li",[t._v("小技巧: 一个数字被同一个数字位异或两次, 该数字值不变. 即: 10 ^ 20 ^ 20, 结果还是10")])])]),t._v(" "),s("h4",{attrs:{id:"_5-4-代码演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-代码演示"}},[t._v("#")]),t._v(" 5.4 代码演示")]),t._v(" "),s("div",{staticClass:"language-scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义两个变量a和b, 初始化值分别为: 3, 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//二进制数据: 0000 0011")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//二进制数据: 0000 0101")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: 0000 0001, 转化成十进制, 结果为: 1")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: 0000 0111, 转化成十进制, 结果为: 7")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 7")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为: 0000 0110, 转换成十进制, 结果为: 6")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 6")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算流程: (按位取反)1111 1100(补码) -> 1111 1011(反码) -> 1000 0100(原码) -> 十进制数据: -4")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: -4")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算流程: 1000 0011(-3原码) -> 1111 1100(-3反码) -> 1111 1101(-3补码) -> 0000 0010(取反后新补码)(正数，原反补一样) -> 十进制数据: 2")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算流程: 0000 0011(3的补码) -> 0000 1100(新的补码) -> 十进制数据: 12")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 12")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算流程: 0000 0011(3的补码) -> 0000 0001(新的补码) -> 十进制数据: 1")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 1")]),t._v("\n\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果为: 3")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果为：20")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br")])]),s("h3",{attrs:{id:"_6-案例-交换两个变量的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-案例-交换两个变量的值"}},[t._v("#")]),t._v(" 6. 案例: 交换两个变量的值")]),t._v(" "),s("h4",{attrs:{id:"_6-1-需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-需求"}},[t._v("#")]),t._v(" 6.1 需求")]),t._v(" "),s("p",[t._v("已知有两个Int类型的变量a和b, 初始化值分别为10和20, 请写代码实现变量a和变量b的值的交换.")]),t._v(" "),s("p",[t._v("即最终结果为: a=20, b=10.")]),t._v(" "),s("blockquote",[s("p",[t._v("注意: 不允许直接写"),s("code",[t._v("a=20, b=10")]),t._v("这种代码.")])]),t._v(" "),s("h4",{attrs:{id:"_6-2-参考代码-都要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-参考代码-都要"}},[t._v("#")]),t._v(" 6.2 参考代码（都要 ）")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("方式一:  通过算术运算符实现.")])]),t._v(" "),s("div",{staticClass:"language-Scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义两个Int类型的变量a和b, 初始化值分别为10和20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将变量a和b的计算结果赋值给变量a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 30, b = 20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算并赋值")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 30, b = 10")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 20, b = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a: 20")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//b: 10")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("方式二: 通过定义临时变量实现")])]),t._v(" "),s("div",{staticClass:"language-scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义两个Int类型的变量a和b, 初始化值分别为10和20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义临时变量temp, 记录变量a的值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 10, b = 20, temp = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把变量b的值赋值给a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 20, b = 20, temp = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把临时变量temp的值赋值给b")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a = 20, b = 10, temp = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a: 20")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//b: 10")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("方式三: 通过位运算符实现")])]),t._v(" "),s("div",{staticClass:"language-Scala line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义两个Int类型的变量a和b, 初始化值分别为10和20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义临时变量temp, 记录变量a和b的位异或值(这个值不需要我们计算)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//即: temp = 10 ^ 20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过位异或进行交换变量值\t")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" temp\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算流程: a = a ^ temp = a ^ a ^ b = 10 ^ 10 ^ 20 = 20")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" temp\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//运算流程: b = b ^ temp = b ^ a ^ b = 20 ^ 10 ^ 20 = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印结果")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a: 20")]),t._v("\nprintln"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//b: 10")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
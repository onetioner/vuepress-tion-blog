(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{543:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"瑞吉外卖项目优化-day02"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#瑞吉外卖项目优化-day02"}},[t._v("#")]),t._v(" 瑞吉外卖项目优化-Day02")]),t._v(" "),a("h2",{attrs:{id:"课程内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程内容"}},[t._v("#")]),t._v(" 课程内容")]),t._v(" "),a("ul",[a("li",[t._v("MySQL主从复制")]),t._v(" "),a("li",[t._v("读写分离案例")]),t._v(" "),a("li",[t._v("项目实现读写分离")]),t._v(" "),a("li",[t._v("Nginx-概述")]),t._v(" "),a("li",[t._v("Nginx-命令")]),t._v(" "),a("li",[t._v("Nginx-应用")])]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("blockquote",[a("p",[t._v("1). 存在的问题")])]),t._v(" "),a("p",[t._v("在前面基础功能实现的过程中，我们后台管理系统及移动端的用户，在进行数据访问时，都是直接操作数据库MySQL的。结构如下图：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825100741985.png",alt:"image-20210825100741985"}}),t._v(" "),a("p",[t._v("而在当前，MySQL服务器只有一台，那么就可能会存在如下问题：")]),t._v(" "),a("p",[t._v("1). 读和写所有压力都由一台数据库承担，压力大")]),t._v(" "),a("p",[t._v("2). 数据库服务器磁盘损坏则数据丢失，单点故障")]),t._v(" "),a("blockquote",[a("p",[t._v("2). 解决方案")])]),t._v(" "),a("p",[t._v("为了解决上述提到的两个问题，我们可以准备两台MySQL，一台主(Master)服务器，一台从(Slave)服务器，主库的数据变更，需要同步到从库中(主从复制)。而用户在访问我们项目时，如果是写操作(insert、update、delete)，则直接操作主库；如果是读(select)操作，则直接操作从库(在这种读写分离的结构中，从库是可以有多个的)，这种结构我们称为 读写分离 。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825101438683.png",alt:"image-20210825101438683"}}),t._v(" "),a("p",[t._v("今天我们就需要实现上述的架构，来解决业务开发中所存在的问题。")]),t._v(" "),a("h2",{attrs:{id:"_1-mysql主从复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql主从复制"}},[t._v("#")]),t._v(" 1. MySQL主从复制")]),t._v(" "),a("p",[t._v("MySQL数据库默认是支持主从复制的，不需要借助于其他的技术，我们只需要在数据库中简单的配置即可。接下来，我们就从以下的几个方面，来介绍一下主从复制：")]),t._v(" "),a("h3",{attrs:{id:"_1-1-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-介绍"}},[t._v("#")]),t._v(" 1.1 介绍")]),t._v(" "),a("p",[t._v("MySQL主从复制是一个异步的复制过程，底层是基于Mysql数据库自带的 "),a("strong",[t._v("二进制日志")]),t._v(" 功能。就是一台或多台MySQL数据库（slave，即"),a("strong",[t._v("从库")]),t._v("）从另一台MySQL数据库（master，即"),a("strong",[t._v("主库")]),t._v("）进行日志的复制，然后再解析日志并应用到自身，最终实现 "),a("strong",[t._v("从库")]),t._v(" 的数据和 "),a("strong",[t._v("主库")]),t._v(" 的数据保持一致。MySQL主从复制是MySQL数据库自带功能，无需借助第三方工具。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("二进制日志：")])]),t._v(" "),a("p",[t._v("​\t二进制日志（BINLOG）记录了所有的 DDL（数据定义语言）语句和 DML（数据操纵语言）语句，但是不包括数据查询语句。此日志对于灾难时的数据恢复起着极其重要的作用，MySQL的主从复制， 就是通过该binlog实现的。默认MySQL是未开启该日志的。")])]),t._v(" "),a("p",[a("strong",[t._v("MySQL的主从复制原理如下：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825110417975.png",alt:"image-20210825110417975"}})]),t._v(" "),a("p",[a("strong",[t._v("MySQL复制过程分成三步：")])]),t._v(" "),a("p",[t._v("1). MySQL master 将数据变更写入二进制日志( binary log)")]),t._v(" "),a("p",[t._v("2). slave将master的binary log拷贝到它的中继日志（relay log）")]),t._v(" "),a("p",[t._v("3). slave重做中继日志中的事件，将数据变更反映它自己的数据")]),t._v(" "),a("h3",{attrs:{id:"_1-2-搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-搭建"}},[t._v("#")]),t._v(" 1.2 搭建")]),t._v(" "),a("h4",{attrs:{id:"_1-2-1-准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-准备工作"}},[t._v("#")]),t._v(" 1.2.1 准备工作")]),t._v(" "),a("p",[t._v("提前准备两台服务器，并且在服务器中安装MySQL，服务器的信息如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据库")]),t._v(" "),a("th",[t._v("IP")]),t._v(" "),a("th",[t._v("数据库版本")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Master")]),t._v(" "),a("td",[t._v("192.168.100.100")]),t._v(" "),a("td",[t._v("5.7.25")])]),t._v(" "),a("tr",[a("td",[t._v("Slave")]),t._v(" "),a("td",[t._v("192.168.100.200")]),t._v(" "),a("td",[t._v("5.7.25")])])])]),t._v(" "),a("p",[a("strong",[t._v("并在两台服务器上做如下准备工作:")])]),t._v(" "),a("p",[t._v("1). 防火墙开放3306端口号")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("firewall-cmd --zone=public --add-port=3306/tcp --permanent\n\nfirewall-cmd --zone=public --list-ports\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825124800430.png",alt:"image-20210825124800430"}})]),t._v(" "),a("p",[t._v("2). 并将两台数据库服务器启动起来：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl start mysqld\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("登录MySQL，验证是否正常启动")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825111414157.png",alt:"image-20210825111414157"}})]),t._v(" "),a("h4",{attrs:{id:"_1-2-2-主库配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-主库配置"}},[t._v("#")]),t._v(" 1.2.2 主库配置")]),t._v(" "),a("blockquote",[a("p",[t._v("服务器： 192.168.100.100")])]),t._v(" "),a("p",[a("strong",[t._v("1). 修改Mysql数据库的配置文件/etc/my.cnf")])]),t._v(" "),a("p",[t._v("在[mysqld]下面增加配置:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("log-bin=mysql-bin   #[必须]启用二进制日志\nserver-id=100       #[必须]服务器唯一ID(唯一即可)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220175315348.png",alt:"image-20220220175315348"}})]),t._v(" "),a("p",[a("strong",[t._v("2). 重启Mysql服务")])]),t._v(" "),a("p",[t._v("执行指令：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" systemctl restart mysqld\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825115853116.png",alt:"image-20210825115853116"}})]),t._v(" "),a("p",[a("strong",[t._v("3). 创建数据同步的用户并授权")])]),t._v(" "),a("p",[t._v("登录mysql，并执行如下指令，创建用户并授权：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLICATION")]),t._v(" SLAVE "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaoming'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),t._v(" identified "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Root@123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("==注：上面SQL的作用是创建一个用户 xiaoming ，密码为 Root@123456 ，并且给xiaoming用户授予REPLICATION SLAVE权限。常用于建立复制时所需要用到的用户权限，也就是slave必须被master授权具有该权限的用户，才能通过该用户复制。==")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mysql8，先前面，再后面\n\nCREATE USER 'xiaowang'@'%' IDENTIFIED BY '12345678';\nGRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO 'xiaowang'@'%';\nALTER USER 'xiaowang'@'%' IDENTIFIED WITH mysql_native_password BY '12345678';\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("blockquote",[a("p",[t._v("MySQL密码复杂程度说明:")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825144818269.png",alt:"image-20210825144818269"}})]),t._v(" "),a("p",[t._v("​\t目前mysql5.7默认密码校验策略等级为 MEDIUM , 该等级要求密码组成为: 数字、小写字母、大写字母 、特殊字符、长度至少8位")])]),t._v(" "),a("p",[a("strong",[t._v("4). 登录Mysql数据库，查看master同步状态")])]),t._v(" "),a("p",[t._v("执行下面SQL，记录下结果中"),a("strong",[t._v("File")]),t._v("和"),a("strong",[t._v("Position")]),t._v("的值")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show master status;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825120355600.png",alt:"image-20210825120355600"}})]),t._v(" "),a("p",[t._v("==注：上面SQL的作用是查看Master的状态，执行完此SQL后不要再执行任何操作==")]),t._v(" "),a("h4",{attrs:{id:"_1-2-3-从库配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-从库配置"}},[t._v("#")]),t._v(" 1.2.3 从库配置")]),t._v(" "),a("blockquote",[a("p",[t._v("服务器： 192.168.100.200")])]),t._v(" "),a("p",[a("strong",[t._v("1). 修改Mysql数据库的配置文件/etc/my.cnf")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("server-id=200 \t#[必须]服务器唯一ID\nslave_skip_errors=all  #跳过错误\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220175414871.png",alt:"image-20220220175414871"}})]),t._v(" "),a("p",[a("strong",[t._v("2). 重启Mysql服务")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl restart mysqld\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("3). 登录Mysql数据库，设置主库地址及同步位置")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("change master to "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("master_host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.100.100'")]),t._v(",master_user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaoming'")]),t._v(",master_password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Root@123456'")]),t._v(",master_log_file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mysql-bin.000001'")]),t._v(",master_log_pos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("441")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstart slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("blockquote",[a("p",[t._v("参数说明：")]),t._v(" "),a("p",[t._v("​\tA. master_host : 主库的IP地址")]),t._v(" "),a("p",[t._v("​\tB. master_user : 访问主库进行主从复制的用户名(上面在主库创建的)")]),t._v(" "),a("p",[t._v("​\tC. master_password : 访问主库进行主从复制的用户名对应的密码")]),t._v(" "),a("p",[t._v("​\tD. master_log_file : 从哪个日志文件开始同步(上述查询master状态中展示的有)")]),t._v(" "),a("p",[t._v("​\tE. master_log_pos : 从指定日志文件的哪个位置开始同步(上述查询master状态中展示的有)")])]),t._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("change master to master_host='192.168.150.188',master_user='xiaowang',master_password='12345678',master_log_file=' binlog.000002',master_log_pos=157;\n\nCHANGE MASTER TO master_host = '192.168.150.188',\nmaster_user = 'xiaowang',\nmaster_password = '12345678',\nmaster_port = 3306,\nmaster_log_file = 'mysql-bin.000002',\nmaster_log_pos = 157,\nmaster_connect_retry = 30;\n\nstop slave;\n如果提示进程在运行\n\n172.17.0.2\ndocker network inspect bridge  查看所有容器ip\n\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[a("strong",[t._v("4). 查看从数据库的状态")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show slave status;\n\nshow slave status\\G;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("然后通过状态信息中的 Slave_IO_running 和 Slave_SQL_running 可以看出主从同步是否就绪，如果这两个参数全为Yes，表示主从同步已经配置完成。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825142313382.png",alt:"image-20210825142313382"}})]),t._v(" "),a("blockquote",[a("p",[t._v("MySQL命令行技巧：")]),t._v(" "),a("p",[t._v("​\t\\G : 在MySQL的sql语句后加上\\G，表示将查询结果进行按列打印，可以使每个字段打印到单独的行。即将查到的结构旋转90度变成纵向；")])]),t._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" Error connecting to source 'xiaowang@172.17.0.2:3306'. This was attempt 2/86400, with a delay of 30 seconds between attempts. Message: Authentication plugin 'caching_sha2_password' reported error: Authentication requires secure connection.\n\n上面原因下面并不能解决，更改一下加密方式可能，Chrome中收藏了解决方法\nmaster\nmysql -uroot -p12345678 -h 172.17.0.2 -P3306 --get-server-public-key\n\n#停止主从复制\n#清空之前的主从复制配置信息\nstop slave;\nreset slave;\n\n#从新配置主从复制\nchange master to master_user='repl',master_password='123',master_host='118.31.127.96',master_port=3307,master_auto_position=1;\nstart slave;\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h3",{attrs:{id:"_1-3-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-测试"}},[t._v("#")]),t._v(" 1.3 测试")]),t._v(" "),a("p",[t._v("主从复制的环境,已经搭建好了,接下来,我们可以通过Navicat连接上两台MySQL服务器,进行测试。测试时，我们只需要在主库Master执行操作，查看从库Slave中是否将数据同步过去即可。")]),t._v(" "),a("p",[t._v("1). 在master中创建数据库itcast, 刷新slave查看是否可以同步过去")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825143518383.png",alt:"image-20210825143518383"}})]),t._v(" "),a("p",[t._v("2). 在master的itcast数据下创建user表, 刷新slave查看是否可以同步过去")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825143549689.png",alt:"image-20210825143549689"}})]),t._v(" "),a("p",[t._v("3). 在master的user表中插入一条数据, 刷新slave查看是否可以同步过去")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825143658516.png",alt:"image-20210825143658516"}})]),t._v(" "),a("h2",{attrs:{id:"_2-读写分离案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-读写分离案例"}},[t._v("#")]),t._v(" 2. 读写分离案例")]),t._v(" "),a("h3",{attrs:{id:"_2-1-背景介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-背景介绍"}},[t._v("#")]),t._v(" 2.1 背景介绍")]),t._v(" "),a("p",[t._v("面对日益增加的系统访问量，数据库的吞吐量面临着巨大瓶颈。 对于同一时刻有大量并发读操作和较少写操作类型的应用系统来说，将数据库拆分为"),a("strong",[t._v("主库")]),t._v("和"),a("strong",[t._v("从库")]),t._v("，主库负责处理事务性的增删改操作，从库负责处理查询操作，能够有效的避免由数据更新导致的行锁，使得整个系统的查询性能得到极大的改善。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825145647274.png",alt:"image-20210825145647274"}})]),t._v(" "),a("p",[t._v("通过读写分离,就可以降低单台数据库的访问压力, 提高访问效率，也可以避免单机故障。")]),t._v(" "),a("p",[t._v("主从复制的结构，我们在第一节已经完成了，那么我们在项目中，如何通过java代码来完成读写分离呢，如何在执行select的时候查询从库，而在执行insert、update、delete的时候，操作主库呢？这个时候，我们就需要介绍一个新的技术 ShardingJDBC。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-shardingjdbc介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-shardingjdbc介绍"}},[t._v("#")]),t._v(" 2.2 ShardingJDBC介绍")]),t._v(" "),a("p",[t._v("Sharding-JDBC定位为轻量级Java框架，在Java的JDBC层提供的额外服务。 它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，完全兼容JDBC和各种ORM框架。")]),t._v(" "),a("p",[t._v("使用Sharding-JDBC可以在程序中轻松的实现数据库读写分离。")]),t._v(" "),a("p",[t._v("Sharding-JDBC具有以下几个特点：")]),t._v(" "),a("p",[t._v("1). 适用于任何基于JDBC的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。")]),t._v(" "),a("p",[t._v("2). 支持任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid, HikariCP等。")]),t._v(" "),a("p",[t._v("3). 支持任意实现JDBC规范的数据库。目前支持MySQL，Oracle，SQLServer，PostgreSQL以及任何遵循SQL92标准的数据库。")]),t._v(" "),a("p",[t._v("依赖:")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.shardingsphere"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("sharding-jdbc-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.0.0-RC1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_2-3-数据库环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-数据库环境"}},[t._v("#")]),t._v(" 2.3 数据库环境")]),t._v(" "),a("p",[t._v("在主库中创建一个数据库rw, 并且创建一张表， 该数据库及表结构创建完毕后会自动同步至从数据库，SQL语句如下：")]),t._v(" "),a("div",{staticClass:"language-SQL line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("database")]),t._v(" rw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" rw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825160658477.png",alt:"image-20210825160658477"}})]),t._v(" "),a("h3",{attrs:{id:"_2-4-初始工程导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-初始工程导入"}},[t._v("#")]),t._v(" 2.4 初始工程导入")]),t._v(" "),a("p",[t._v("我们本案例主要是演示一下读写分离操作，对于基本的增删改查的业务操作，我们就不再去编写了，我们可以直接导入资料中提供的demo工程（rw_demo），在demo工程中，我们已经完成了user的增删改查操作，具体的工程结构如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825161155163.png",alt:"image-20210825161155163"}})]),t._v(" "),a("h3",{attrs:{id:"_2-5-读写分离配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-读写分离配置"}},[t._v("#")]),t._v(" 2.5 读写分离配置")]),t._v(" "),a("p",[t._v("1). 在pom.xml中增加shardingJdbc的maven坐标")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.shardingsphere"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("sharding-jdbc-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.0.0-RC1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("2). 在application.yml中增加数据源的配置")]),t._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow-bean-definition-overriding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shardingsphere")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("names")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("slave\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主数据源")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.alibaba.druid.pool.DruidDataSource\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.100.100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/rw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("serverTimezone=Asia/Shanghai"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从数据源")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slave")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.alibaba.druid.pool.DruidDataSource\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.100.200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/rw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("serverTimezone=Asia/Shanghai"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("masterslave")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 读写分离配置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("load-balance-algorithm-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" round_robin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#轮询")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终的数据源名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dataSource\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主库数据源名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master-data-source-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从库数据源名称列表，多个逗号分隔")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slave-data-source-names")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" slave\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启SQL显示，默认false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("p",[t._v("配置解析:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825162910711.png",alt:"image-20210825162910711"}})]),t._v(" "),a("p",[t._v("3). 在application.yml中增加配置")]),t._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow-bean-definition-overriding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("该配置项的目的,就是如果当前项目中存在同名的bean,后定义的bean会覆盖先定义的。")]),t._v(" "),a("p",[t._v("spring中(spring.main.allow-bean-definition-overriding) 分析：https://blog.csdn.net/liubenlong007/article/details/87885567")]),t._v(" "),a("p",[t._v("==如果不配置该项，项目启动之后将会报错：==")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825163737687.png",alt:"image-20210825163737687"}})]),t._v(" "),a("p",[t._v("报错信息表明，在声明 org.apache.shardingsphere.shardingjdbc.spring.boot 包下的SpringBootConfiguration中的dataSource这个bean时出错, 原因是有一个同名的 dataSource 的bean在com.alibaba.druid.spring.boot.autoconfigure包下的DruidDataSourceAutoConfigure类加载时已经声明了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825164147056.png",alt:"image-20210825164147056"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825164227927.png",alt:"image-20210825164227927"}})]),t._v(" "),a("p",[t._v("而我们需要用到的是 shardingjdbc包下的dataSource，所以我们需要配置上述属性，让后加载的覆盖先加载的。")]),t._v(" "),a("h3",{attrs:{id:"_2-6-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-测试"}},[t._v("#")]),t._v(" 2.6 测试")]),t._v(" "),a("p",[t._v("我们使用shardingjdbc来实现读写分离，直接通过上述简单的配置就可以了。配置完毕之后，我们就可以重启服务，通过postman来访问controller的方法，来完成用户信息的增删改查，我们可以通过debug及日志的方式来查看每一次执行增删改查操作，使用的是哪个数据源，连接的是哪个数据库。")]),t._v(" "),a("p",[a("strong",[t._v("1). 保存数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825170601641.png",alt:"image-20210825170601641"}})]),t._v(" "),a("p",[t._v("控制台输出日志，可以看到操作master主库：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825172748209.png",alt:"image-20210825172748209"}})]),t._v(" "),a("p",[a("strong",[t._v("2). 修改数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825171507059.png",alt:"image-20210825171507059"}})]),t._v(" "),a("p",[t._v("控制台输出日志，可以看到操作master主库：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825172534790.png",alt:"image-20210825172534790"}})]),t._v(" "),a("p",[a("strong",[t._v("3). 查询数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825171609997.png",alt:"image-20210825171609997"}})]),t._v(" "),a("p",[t._v("控制台输出日志，可以看到操作slave主库：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825171623011.png",alt:"image-20210825171623011"}})]),t._v(" "),a("p",[a("strong",[t._v("4). 删除数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825172329600.png",alt:"image-20210825172329600"}})]),t._v(" "),a("p",[t._v("控制台输出日志，可以看到操作master主库：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825172353414.png",alt:"image-20210825172353414"}})]),t._v(" "),a("h2",{attrs:{id:"_3-项目实现读写分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-项目实现读写分离"}},[t._v("#")]),t._v(" 3. 项目实现读写分离")]),t._v(" "),a("h3",{attrs:{id:"_3-1-数据库环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-数据库环境准备"}},[t._v("#")]),t._v(" 3.1 数据库环境准备")]),t._v(" "),a("p",[t._v("直接使用我们前面在虚拟机中搭建的主从复制的数据库环境即可。在主库中创建瑞吉外卖项目的业务数据库reggie, 并导入相关表结构和数据(我们可以将自己之前在本地开发时使用的数据库数据导出, 然后导入到服务器中的主库即可)。")]),t._v(" "),a("p",[a("strong",[t._v("1). 将自己本地的reggie数据库的数据导出SQL文件")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825175039571.png",alt:"image-20210825175039571"}})]),t._v(" "),a("p",[t._v("这样做的话，我们之前自己开发时，添加的测试数据都还在的，便于测试。")]),t._v(" "),a("p",[a("strong",[t._v("2). 在主数据库master中，创建数据库reggie，并导入该SQL文件")])]),t._v(" "),a("p",[t._v("master中创建数据库，会自动同步至slave从库")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825175416295.png",alt:"image-20210825175416295"}})]),t._v(" "),a("p",[t._v("在master的reggie中导入sql文件")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825175747138.png",alt:"image-20210825175747138"}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-创建git分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-创建git分支"}},[t._v("#")]),t._v(" 3.2 创建Git分支")]),t._v(" "),a("h3",{attrs:{id:"_3-3-读写分离配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-读写分离配置"}},[t._v("#")]),t._v(" 3.3 读写分离配置")]),t._v(" "),a("p",[a("strong",[t._v("1). 在项目的pom.xml增加依赖")])]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.shardingsphere"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("sharding-jdbc-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.0.0-RC1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("2). 在项目的application.yml中配置数据源相关信息")])]),t._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow-bean-definition-overriding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shardingsphere")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("names")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("slave\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主数据源")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.alibaba.druid.pool.DruidDataSource\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.100.100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/reggie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("serverTimezone=Asia/Shanghai"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从数据源")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slave")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.alibaba.druid.pool.DruidDataSource\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//192.168.100.200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306/reggie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("serverTimezone=Asia/Shanghai"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("masterslave")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 读写分离配置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("load-balance-algorithm-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" round_robin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#轮询")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终的数据源名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dataSource\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主库数据源名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("master-data-source-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从库数据源名称列表，多个逗号分隔")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slave-data-source-names")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" slave\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启SQL显示，默认false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h3",{attrs:{id:"_3-4-功能测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-功能测试"}},[t._v("#")]),t._v(" 3.4 功能测试")]),t._v(" "),a("p",[t._v("配置完毕之后，我们启动项目进行测试，直接访问系统管理后台的页面，然后执行相关业务操作，看控制台输出的日志信息即可。")]),t._v(" "),a("p",[t._v("查询操作：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825181207319.png",alt:"image-20210825181207319"}})]),t._v(" "),a("p",[t._v("更新操作：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825181524065.png",alt:"image-20210825181524065"}}),t._v(" "),a("p",[t._v("插入操作：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825181915511.png",alt:"image-20210825181915511"}}),t._v(" "),a("p",[t._v("删除操作：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210825182259837.png",alt:"image-20210825182259837"}}),t._v(" "),a("h2",{attrs:{id:"_4-nginx-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-nginx-概述"}},[t._v("#")]),t._v(" 4. Nginx-概述")]),t._v(" "),a("h3",{attrs:{id:"_4-1-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-介绍"}},[t._v("#")]),t._v(" 4.1 介绍")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210829234142590.png",alt:"image-20210829234142590"}})]),t._v(" "),a("p",[t._v("Nginx是一款轻量级的Web服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx的网站有：百度、京东、新浪、网易、腾讯、淘宝等。")]),t._v(" "),a("p",[t._v("Nginx是由"),a("strong",[t._v("伊戈尔·赛索耶夫")]),t._v("为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。")]),t._v(" "),a("p",[t._v("官网：https://nginx.org/")]),t._v(" "),a("h3",{attrs:{id:"_4-2-下载和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-下载和安装"}},[t._v("#")]),t._v(" 4.2 下载和安装")]),t._v(" "),a("h4",{attrs:{id:"_4-2-1-下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-下载"}},[t._v("#")]),t._v(" 4.2.1 下载")]),t._v(" "),a("p",[t._v("在Nginx的官网的下载页面中(http://nginx.org/en/download.html)，就展示了当前Nginx版本，并提供了下载的连接。 如下：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210829234623737.png",alt:"image-20210829234623737"}}),t._v(" "),a("p",[t._v("在本项目中，我们所学习的Nginx选择的是稳定版本的1.16这个版本，我们可以直接从官网下载，当然在我们的课程资料中也已经提供了该版本的安装包。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210829235301014.png",alt:"image-20210829235301014"}})]),t._v(" "),a("h4",{attrs:{id:"_4-2-2-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-安装"}},[t._v("#")]),t._v(" 4.2.2 安装")]),t._v(" "),a("p",[a("strong",[t._v("1). 安装依赖包")])]),t._v(" "),a("p",[t._v("由于nginx是基于c语言开发的，所以需要安装c语言的编译环境，及正则表达式库等依赖包")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yum -y install gcc pcre-devel zlib-devel openssl openssl-devel\n\napt -y install gcc pcre-devel zlib-devel openssl openssl-devel\n\n\napt -y install gcc-c++ \napt -y install pcre pcre-devel\nyum -y install zlib zlib-devel\nyum -y install openssl openssl-devel  \n\napt-get install gcc\napt-get install g++\nsudo apt-get install libpcre3-dev\nsudo apt install zlib1g\nsudo apt install zlib1g-dev\nsudo apt-get install libssl-dev\n把这些依赖包安装成功\n\n\n在Edge浏览器中收藏了ubuntu源码安装nginx\n\n\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("p",[a("strong",[t._v("2). 下载Nginx安装包")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yum install wget\nwget https://nginx.org/download/nginx-1.16.1.tar.gz\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("blockquote",[a("p",[t._v("wget :")]),t._v(" "),a("p",[t._v("​\twget命令用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。")])]),t._v(" "),a("p",[t._v("执行完wget指令后，就会在当前所在目录看到下载下来的文件。")]),t._v(" "),a("p",[a("strong",[t._v("3). 解压nginx压缩包")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("tar -zxvf nginx-1.16.1.tar.gz\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("4). 配置Nginx编译环境")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd nginx-1.16.1\nmkdir -p /usr/local/nginx\n./configure --prefix=/usr/local/nginx  \n\n./configure --prefix=/usr/local/One_Soft/nginx  \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("说明:")]),t._v(" "),a("p",[t._v("​\t--prefix 指定的目录，就是我们安装Nginx的目录。")]),t._v(" "),a("p",[a("strong",[t._v("5). 编译&安装")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("make & make install\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"_4-3-目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-目录结构"}},[t._v("#")]),t._v(" 4.3 目录结构")]),t._v(" "),a("p",[t._v("安装完Nginx后，我们可以切换到Nginx的安装目录(/usr/local/nginx)，先来熟悉一下Nginx的目录结构，如下图：")]),t._v(" "),a("img",{staticStyle:{zoom:"90%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830000933352.png",alt:"image-20210830000933352"}}),t._v(" "),a("blockquote",[a("p",[t._v("备注：")]),t._v(" "),a("p",[t._v("​\t上述我们用到的一个指令 tree，该指令可以将我们指定的目录以树状结构展示出来。如果没有这个指令，可以通过以下指令进行安装。")]),t._v(" "),a("p",[t._v("​\tyum install tree")])]),t._v(" "),a("p",[t._v("重点目录和文件如下:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("目录/文件")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("conf")]),t._v(" "),a("td",[t._v("配置文件的存放目录")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("conf/nginx.conf")]),t._v(" "),a("td",[t._v("Nginx的核心配置文件")]),t._v(" "),a("td",[t._v("conf下有很多nginx的配置文件，我们主要操作这个核心配置文件")])]),t._v(" "),a("tr",[a("td",[t._v("html")]),t._v(" "),a("td",[t._v("存放静态资源(html, css, js )")]),t._v(" "),a("td",[t._v("部署到Nginx的静态资源都可以放在html目录中")])]),t._v(" "),a("tr",[a("td",[t._v("logs")]),t._v(" "),a("td",[t._v("存放nginx日志(访问日志、错误日志等)")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("sbin/nginx")]),t._v(" "),a("td",[t._v("二进制文件，用于启动、停止Nginx服务")]),t._v(" "),a("td")])])]),t._v(" "),a("h2",{attrs:{id:"_5-nginx-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-nginx-命令"}},[t._v("#")]),t._v(" 5. Nginx-命令")]),t._v(" "),a("h3",{attrs:{id:"_5-1-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-常用命令"}},[t._v("#")]),t._v(" 5.1 常用命令")]),t._v(" "),a("p",[t._v("Nginx中，我们的二进制可执行文件(nginx)存放在sbin目录下，虽然只有一个可执行文件，但是我们可以通过该指令配合不同的参数达到更加强大的功能。接下来，我们就演示一下Nginx常见指令, 在执行下面的指令时,都需要在==/usr/local/nginx/sbin/==目录下执行。")]),t._v(" "),a("p",[a("strong",[t._v("1). 查看版本")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./nginx -v\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830223435585.png",alt:"image-20210830223435585"}})]),t._v(" "),a("p",[a("strong",[t._v("2). 检查配置文件")])]),t._v(" "),a("p",[t._v("修改了nginx.conf核心配置文件之后，在启动Nginx服务之前，可以先检查一下conf/nginx.conf文件配置的是否有错误，命令如下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./nginx -t\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830223511878.png",alt:"image-20210830223511878"}})]),t._v(" "),a("p",[a("strong",[t._v("3). 启动")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./nginx\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("启动之后，我们可以通过ps -ef指令来查看nginx的进程是否存在。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830224019661.png",alt:"image-20210830224019661"}})]),t._v(" "),a("p",[t._v("注意： nginx服务启动后，默认就会有两个进程。")]),t._v(" "),a("p",[t._v("启动之后，我们可以直接访问Nginx的80端口， http://192.168.200.200")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830224605952.png",alt:"image-20210830224605952"}}),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("p",[t._v("​\t要想正常访问Nginx，需要关闭防火墙或开放指定端口号，执行的指令如下：")]),t._v(" "),a("p",[t._v("​\tA. 关闭防火墙")]),t._v(" "),a("p",[t._v("​\t\tsystemctl stop firewalld")]),t._v(" "),a("p",[t._v("​\tB. 开放80端口")]),t._v(" "),a("p",[t._v("​\t\tfirewall-cmd --zone=public --add-port=80/tcp --permanent")]),t._v(" "),a("p",[t._v("​\t\tfirewall-cmd --reload")])]),t._v(" "),a("p",[a("strong",[t._v("4). 停止")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./nginx -s stop\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("停止之后，我们可以查看nginx的进程：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ps -ef|grep nginx\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830224121489.png",alt:"image-20210830224121489"}})]),t._v(" "),a("p",[a("strong",[t._v("5). 重新加载")])]),t._v(" "),a("p",[t._v("当修改了Nginx配置文件后，需要重新加载才能生效，可以使用下面命令重新加载配置文件：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./nginx -s reload\n\n可以进入配置文件，修改进程数，然后重新加载，再看进程数，会多了一个work\n\n也可以把服务停掉，然后重新启动，配置也会生效\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_5-2-环境变量配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-环境变量配置"}},[t._v("#")]),t._v(" 5.2 环境变量配置")]),t._v(" "),a("p",[t._v("在上述我们在使用nginx命令在进行服务的启动、停止、重新加载时，都需要用到一个指令nginx，而这个指令是在nginx/sbin目录下的，我们每一次使用这个指令都需要切换到sbin目录才可以，使用相对繁琐。那么我们能不能在任意目录下都可以执行该指令来操作nginx呢？答案是可以的，配置nginx的环境变量即可。")]),t._v(" "),a("p",[t._v("通过vim编辑器，打开/etc/profile文件, 在PATH环境变量中增加nginx的sbin目录，如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830225544343.png",alt:"image-20210830225544343"}})]),t._v(" "),a("p",[t._v("修改完配置文件之后，需要执行 source /etc/profile 使文件生效。 接下来，我们就可以在任意目录下执行nginx的指令了，如：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830225702899.png",alt:"image-20210830225702899"}})]),t._v(" "),a("h2",{attrs:{id:"_6-nginx-应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-nginx-应用"}},[t._v("#")]),t._v(" 6. Nginx-应用")]),t._v(" "),a("p",[t._v("介绍了并安装了Nginx之后，本章节将要讲解的是Nginx的使用，我们主要从以下四个方面进行讲解。")]),t._v(" "),a("h3",{attrs:{id:"_6-1-配置文件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-配置文件结构"}},[t._v("#")]),t._v(" 6.1 配置文件结构")]),t._v(" "),a("p",[t._v("nginx的配置文件(conf/nginx.conf)整体上分为三部分: 全局块、events块、http块。这三块的分别配置什么样的信息呢，看下表：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("区域")]),t._v(" "),a("th",[t._v("职责")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("全局块")]),t._v(" "),a("td",[t._v("配置和nginx运行相关的全局配置")])]),t._v(" "),a("tr",[a("td",[t._v("events块")]),t._v(" "),a("td",[t._v("配置和网络连接相关的配置")])]),t._v(" "),a("tr",[a("td",[t._v("http块")]),t._v(" "),a("td",[t._v("配置代理、缓存、日志记录、虚拟主机等配置")])])])]),t._v(" "),a("p",[t._v("具体结构图如下:")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830230827686.png",alt:"image-20210830230827686"}}),t._v(" "),a("blockquote",[a("p",[t._v("在全局块、events块以及http块中，我们经常配置的是http块。")]),t._v(" "),a("p",[t._v("在http块中可以包含多个server块,每个server块可以配置多个location块。")]),t._v(" "),a("p",[t._v("不是server块前面就是http全局块，server块中不是location块前面就是server全局块")])]),t._v(" "),a("h3",{attrs:{id:"_6-2-部署静态资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-部署静态资源"}},[t._v("#")]),t._v(" 6.2 部署静态资源")]),t._v(" "),a("h4",{attrs:{id:"_6-2-1-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-介绍"}},[t._v("#")]),t._v(" 6.2.1 介绍")]),t._v(" "),a("p",[t._v("Nginx可以作为静态web服务器来部署静态资源。这里所说的静态资源是指在服务端真实存在，并且能够直接展示的一些文件，比如常见的html页面、css文件、js文件、图片、视频等资源。")]),t._v(" "),a("p",[t._v("相对于Tomcat，Nginx处理静态资源的能力更加高效，所以在生产环境下，一般都会将静态资源部署到Nginx中。")]),t._v(" "),a("p",[t._v("将静态资源部署到Nginx非常简单，只需要将文件复制到Nginx安装目录下的html目录中即可。")]),t._v(" "),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("80;\t\t\t\t#监听端口\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("localhost;\t#服务器名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/ {\t\t\t#匹配客户端请求url")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("        root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("html;\t\t\t#指定静态资源根目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("        index")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("index.html;\t#指定默认首页")]),t._v("\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"_6-2-2-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-测试"}},[t._v("#")]),t._v(" 6.2.2 测试")]),t._v(" "),a("p",[t._v("在资料中，我们提供了一个静态的html文件，我们需要将这个文件部署到nginx中，然后通过nginx访问html静态资源。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" chmod 777 hello.html\n如果出现403，修改一下权限\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("1). 将静态资源上传到 /usr/local/nginx/html 目录")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830232238402.png",alt:"image-20210830232238402"}})]),t._v(" "),a("p",[a("strong",[t._v("2). 启动nginx")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830232419462.png",alt:"image-20210830232419462"}})]),t._v(" "),a("p",[a("strong",[t._v("3). 访问")])]),t._v(" "),a("p",[t._v("http://192.168.100.100/hello.html")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220180550093.png",alt:"image-20220220180550093"}})]),t._v(" "),a("p",[t._v("http://192.168.100.100 ， 访问该地址，访问的是nginx的默认首页")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220180207165.png",alt:"image-20220220180207165"}})]),t._v(" "),a("p",[a("strong",[t._v("4). 配置首页")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830232720821.png",alt:"image-20210830232720821"}})]),t._v(" "),a("p",[t._v("如果我们需要将hello.html作为nginx的首页，可以修改location的index指令，配置为hello.html，如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830233019489.png",alt:"image-20210830233019489"}})]),t._v(" "),a("p",[t._v("配置完毕后，我们可以通过指令，来检查配置文件是否配置正确： nginx -t")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830233122708.png",alt:"image-20210830233122708"}})]),t._v(" "),a("p",[t._v("配置文件修改了，我们需要重新加载一下，才可以生效：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("nginx -s reload\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("5). 访问")])]),t._v(" "),a("p",[t._v("http://192.168.100.100")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220180805583.png",alt:"image-20220220180805583"}})]),t._v(" "),a("h3",{attrs:{id:"_6-3-反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-反向代理"}},[t._v("#")]),t._v(" 6.3 反向代理")]),t._v(" "),a("h4",{attrs:{id:"_6-3-1-概念介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-概念介绍"}},[t._v("#")]),t._v(" 6.3.1 概念介绍")]),t._v(" "),a("p",[t._v("1). 正向代理")]),t._v(" "),a("p",[t._v("正向代理服务器是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。")]),t._v(" "),a("p",[t._v("正向代理的典型用途是为在防火墙内的局域网客户端提供访问Internet的途径。")]),t._v(" "),a("p",[t._v("正向代理一般是"),a("strong",[t._v("在客户端设置代理服务器")]),t._v("，通过代理服务器转发请求，最终访问到目标服务器。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830233450415.png",alt:"image-20210830233450415"}})]),t._v(" "),a("p",[t._v("2). 反向代理")]),t._v(" "),a("p",[t._v("反向代理服务器位于用户与目标服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源，反向代理服务器负责将请求转发给目标服务器。用户不需要知道目标服务器的地址，也无须在用户端作任何设定，对于用户来说，访问反向代理服务器是完全无感知的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830233634695.png",alt:"image-20210830233634695"}})]),t._v(" "),a("p",[t._v("那么在本小节，我们就是要使用nginx来作为反向代理服务器使用。 在nginx中，我们可以在nginx.conf中配置反向代理:")]),t._v(" "),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("80;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("localhost;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/ {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("        proxy_pass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("http://192.168.100.200:8080; \t#反向代理配置，将请求转发到指定服务")]),t._v("\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("上述配置的含义为: 当我们访问nginx的80端口时，")]),t._v(" "),a("p",[t._v("根据反向代理配置，会将请求转发到 http://192.168.100.200:8080 对应的服务上。")]),t._v(" "),a("h4",{attrs:{id:"_6-3-2-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-测试"}},[t._v("#")]),t._v(" 6.3.2 测试")]),t._v(" "),a("p",[t._v("需求: 在192.168.100.200这台服务器中部署了java应用，运行端口为8080，并提供了一个可访问的链接 /hello。现在我们需要在访问nginx时，通过nginx将请求转发到192.168.100.200:8080的服务。")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210830235803013.png",alt:"image-20210830235803013"}}),t._v(" "),a("p",[a("strong",[t._v("1). 在192.168.100.200 部署服务并启动")])]),t._v(" "),a("p",[t._v("将资料中提供的 helloworld-8080.jar 上传到服务器端，并通过指令 java -jar helloworld-8080.jar 运行服务。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210831000152199.png",alt:"image-20210831000152199"}})]),t._v(" "),a("p",[a("strong",[t._v("2). 在192.168.100.100中的nginx.conf中配置反向代理")])]),t._v(" "),a("p",[t._v("进入nginx的安装目录，并编辑配置文件nginx.conf:")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /usr/local/nginx/conf/\nvim nginx.conf\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("80;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("localhost;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/ {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("        proxy_pass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("http://192.168.100.200:8080; \t#反向代理配置，将请求转发到指定服务")]),t._v("\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("strong",[t._v("3). 检查配置文件，并重新加载")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("nginx -t\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210831001021252.png",alt:"image-20210831001021252"}})]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("nginx -s reload\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("4). 访问")])]),t._v(" "),a("p",[t._v("http://192.168.100.100")]),t._v(" "),a("h3",{attrs:{id:"_6-4-负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-负载均衡"}},[t._v("#")]),t._v(" 6.4 负载均衡")]),t._v(" "),a("h4",{attrs:{id:"_6-4-1-概念介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-1-概念介绍"}},[t._v("#")]),t._v(" 6.4.1 概念介绍")]),t._v(" "),a("p",[t._v("早期的网站流量和业务功能都比较简单，单台服务器就可以满足基本需求，但是随着互联网的发展，业务流量越来越大并且业务逻辑也越来越复杂，单台服务器的性能及单点故障问题就凸显出来了，因此需要多台服务器组成应用集群，进行性能的水平扩展以及避免单点故障出现。")]),t._v(" "),a("p",[t._v("**应用集群：**将同一应用部署到多台机器上，组成应用集群，接收负载均衡器分发的请求，进行业务处理并返回响应数据")]),t._v(" "),a("p",[t._v("**负载均衡器：**将用户请求根据对应的负载均衡算法分发到应用集群中的一台服务器进行处理")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20210831080743617.png",alt:"image-20210831080743617"}}),t._v(" "),a("p",[t._v("此处的负载均衡器，我们将会使用Nginx来实现，而Nginx的负载均衡是基于反向代理的，只不过此时所代理的服务器不是一台，而是多台。")]),t._v(" "),a("h4",{attrs:{id:"_6-4-2-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-2-测试"}},[t._v("#")]),t._v(" 6.4.2 测试")]),t._v(" "),a("p",[a("strong",[t._v("1). 将资料中提供的两个jar包，上传到 192.168.100.200 服务器上")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("jar")]),t._v(" "),a("th",[t._v("运行端口")]),t._v(" "),a("th",[t._v("请求链接")]),t._v(" "),a("th",[t._v("响应数据")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220183005506.png",alt:"image-20220220183005506"}})]),t._v(" "),a("td",[t._v("8080")]),t._v(" "),a("td",[t._v("/hello")]),t._v(" "),a("td",[t._v("8080")])]),t._v(" "),a("tr",[a("td",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220183023670.png",alt:"image-20220220183023670"}})]),t._v(" "),a("td",[t._v("8081")]),t._v(" "),a("td",[t._v("/hello")]),t._v(" "),a("td",[t._v("8081")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("我们在测试时，并没有那么多服务器，我们可以在一台服务器中启动多个服务，运行在不同的端口号上进行测试。")])]),t._v(" "),a("p",[a("strong",[t._v("2). 运行上传上来的两个jar包，运行端口分别是 8080 ， 8081")])]),t._v(" "),a("p",[t._v("由于我们执行 java -jar 指令会占用前台窗口，所以我们可以采用后台模式运行。")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" helloworld-8080.jar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" helloworld-8080.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" helloworld-8081.jar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&>")]),t._v(" helloworld-8081.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("3). 在nginx中配置负载均衡")])]),t._v(" "),a("p",[t._v("打开nginx的配置文件nginx.conf并增加如下配置:")]),t._v(" "),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream指令可以定义一组服务器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("upstream")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("targetserver{\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("192.168.100.200:8080;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("192.168.100.200:8081;")]),t._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("      80;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v(" localhost;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/ {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("        proxy_pass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("http://targetserver;")]),t._v("\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("具体的配置位置如下:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220182717939.png",alt:"image-20220220182717939"}})]),t._v(" "),a("p",[a("strong",[t._v("4). 重新加载nginx配置文件,访问")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("nginx "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" reload\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("测试时,我们直接访问nginx(http://192.168.100.100), 此时nginx会根据负载均衡策略,将请求转发到后面的两台服务器。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220182548353.png",alt:"image-20220220182548353"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/onetioner/img/main/PicGo/image-20220220182613070.png",alt:"image-20220220182613070"}})]),t._v(" "),a("p",[t._v("在上述的测试过程中，我们看到请求均衡的转发到了8080和8081，因为模式的负载均衡策略是==轮询==。")]),t._v(" "),a("p",[a("font",{attrs:{color:"red",size:"5"}},[t._v("注意: 上述所有涉及到的端口号，都需要在对应的服务器的防火墙中开放，或者彻底关闭防火墙")])],1),t._v(" "),a("h4",{attrs:{id:"_6-4-3-负载均衡策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-3-负载均衡策略"}},[t._v("#")]),t._v(" 6.4.3 负载均衡策略")]),t._v(" "),a("p",[t._v("处理上述默认的轮询策略以外，在Nginx中还提供了其他的负载均衡策略，如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("名称")])]),t._v(" "),a("th",[a("strong",[t._v("说明")])]),t._v(" "),a("th",[t._v("特点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("轮询")]),t._v(" "),a("td",[t._v("默认方式")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("weight")]),t._v(" "),a("td",[t._v("权重方式")]),t._v(" "),a("td",[t._v("根据权重分发请求,权重大的分配到请求的概率大")])]),t._v(" "),a("tr",[a("td",[t._v("ip_hash")]),t._v(" "),a("td",[t._v("依据ip分配方式")]),t._v(" "),a("td",[t._v("根据客户端请求的IP地址计算hash值， 根据hash值来分发请求, 同一个IP发起的请求, 会发转发到同一个服务器上")])]),t._v(" "),a("tr",[a("td",[t._v("least_conn")]),t._v(" "),a("td",[t._v("依据最少连接方式")]),t._v(" "),a("td",[t._v("哪个服务器当前处理的连接少, 请求优先转发到这台服务器")])]),t._v(" "),a("tr",[a("td",[t._v("url_hash")]),t._v(" "),a("td",[t._v("依据url分配方式")]),t._v(" "),a("td",[t._v("根据客户端请求url的hash值，来分发请求, 同一个url请求, 会发转发到同一个服务器上")])]),t._v(" "),a("tr",[a("td",[t._v("fair")]),t._v(" "),a("td",[t._v("依据响应时间方式")]),t._v(" "),a("td",[t._v("优先把请求分发给处理请求时间短的服务器")])])])]),t._v(" "),a("p",[t._v("权重的配置：")]),t._v(" "),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream指令可以定义一组服务器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("upstream")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("targetserver{\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("192.168.100.200:8080 weight=10;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("    server")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("192.168.100.200:8081 weight=5;")]),t._v("\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("上述配置的weight权重是相对的，在上述的配置中，效果就是，在大数据量的请求下，最终8080接收的请求数是8081的两倍。")])])}),[],!1,null,null,null);a.default=e.exports}}]);
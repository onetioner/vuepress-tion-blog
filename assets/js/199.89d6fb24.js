(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{557:function(s,a,t){"use strict";t.r(a);var n=t(7),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"scala第五章节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scala第五章节"}},[s._v("#")]),s._v(" Scala第五章节")]),s._v(" "),a("h3",{attrs:{id:"章节目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#章节目标"}},[s._v("#")]),s._v(" 章节目标")]),s._v(" "),a("ol",[a("li",[s._v("掌握方法的格式和用法")]),s._v(" "),a("li",[s._v("掌握函数的格式和用法")]),s._v(" "),a("li",[s._v("掌握九九乘法表案例")])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_1-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-方法"}},[s._v("#")]),s._v(" 1. 方法")]),s._v(" "),a("h4",{attrs:{id:"_1-1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-概述"}},[s._v("#")]),s._v(" 1.1 概述")]),s._v(" "),a("p",[s._v("实际开发中, 我们需要编写大量的逻辑代码, 这就势必会涉及到重复的需求. 例如: 求10和20的最大值, 求11和22的最大值, 像这样的需求, "),a("code",[s._v("用来进行比较的逻辑代码需要编写两次")]),s._v(", 而如果把比较的逻辑代码放到方法中, 只需要编写一次就可以了, 这就是方法.  scala中的方法和Java方法类似, 但scala与Java定义方法的语法是不一样的。")]),s._v(" "),a("h4",{attrs:{id:"_1-2-语法格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-语法格式"}},[s._v("#")]),s._v(" 1.2 语法格式")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" 方法名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("参数类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 参数名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("参数类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法体")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("注意:")]),s._v(" "),a("ul",[a("li",[s._v("参数列表的参数类型不能省略")]),s._v(" "),a("li",[s._v("返回值类型可以省略，由scala编译器自动推断")]),s._v(" "),a("li",[s._v("返回值可以不写return，默认就是{}块表达式的值")])])]),s._v(" "),a("h4",{attrs:{id:"_1-3-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-示例"}},[s._v("#")]),s._v(" 1.3 示例")]),s._v(" "),a("p",[s._v("**需求: **")]),s._v(" "),a("ol",[a("li",[s._v("定义一个方法getMax，用来获取两个整型数字的最大值, 并返回结果(最大值).")]),s._v(" "),a("li",[s._v("调用该方法获取最大值, 并将结果打印到控制台上.")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("ul",[a("li",[s._v("方式一: 标准写法")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义方法, 用来获取两个整数的最大值.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getMax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 调用方法, 获取最大值.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getMax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果.")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("方式二: 优化版")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义方法, 用来获取两个整数的最大值.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getMax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" b\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 调用方法, 获取最大值.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getMax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果.")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_1-4-返回值类型推断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-返回值类型推断"}},[s._v("#")]),s._v(" 1.4 返回值类型推断")]),s._v(" "),a("p",[s._v("scala定义方法可以省略返回值的数据类型，由scala自动推断返回值类型。这样方法定义后更加简洁。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意:  定义递归方法，不能省略返回值类型")])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("p",[s._v("定义递归方法, 求5的阶乘.")]),s._v(" "),a("p",[a("strong",[s._v("步骤")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("定义方法factorial, 用来计算某个数字的阶乘")]),s._v(" "),a("blockquote",[a("p",[s._v("规律: 1的阶乘等于1, 其他数字的阶乘为: n! = n * (n - 1)!")])])]),s._v(" "),a("li",[a("p",[s._v("调用方法, 获取5的阶乘, 并将结果打印到控制台上.")])])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义方法factorial, 用来计算某个数字的阶乘")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" factorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" factorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 调用方法, 获取5的阶乘.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" factorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 将结果打印到控制台上.")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"result: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_1-5-惰性方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-惰性方法"}},[s._v("#")]),s._v(" 1.5 惰性方法")]),s._v(" "),a("p",[s._v("当记录方法返回值的变量被声明为lazy时, 方法的执行将被推迟, 直到我们首次使用该值时, 方法才会执行,  像这样的方法, 就叫: "),a("strong",[s._v("惰性方法")]),s._v(".")]),s._v(" "),a("blockquote",[a("p",[s._v("注意:")]),s._v(" "),a("ol",[a("li",[s._v('Java中并没有提供原生态的"惰性"技术, 但是可以通过特定的代码结构实现, 这种结构被称之为: 懒加载(也叫延迟加载)')]),s._v(" "),a("li",[s._v("lazy不能修饰var类型的变量.")])])]),s._v(" "),a("p",[a("strong",[s._v("使用场景:")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("打开数据库连接")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("由于表达式执行代价昂贵, 因此我们希望能推迟该操作, 直到我们确实需要表达式结果值时才执行它")])])])]),s._v(" "),a("li",[a("p",[s._v("提升某些特定模块的启动时间.")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("为了缩短模块的启动时间, 可以将当前不需要的某些工作推迟执行")])])])]),s._v(" "),a("li",[a("p",[s._v("确保对象中的某些字段能优先初始化")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("为了确保对象中的某些字段能优先初始化, 我们需要对其他字段进行惰性化处理")])])])])]),s._v(" "),a("p",[a("strong",[s._v("需求")])]),s._v(" "),a("p",[s._v('定义一个方法用来获取两个整数和, 通过"惰性"技术调用该方法, 然后打印结果.')]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义方法, 用来获取两个整数和")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"getSum方法被执行了..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//2. 通过"惰性"方式调用该方法.')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lazy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此时我们发现getSum方法并没有执行, 说明它的执行被推迟了.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果, 并观察")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sum: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//打印结果为sum: 3, 说明首次使用方法返回值时, 方法才会加载执行.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"_1-6-方法参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-方法参数"}},[s._v("#")]),s._v(" 1.6 方法参数")]),s._v(" "),a("p",[s._v("scala中的方法参数，使用比较灵活。它支持以下几种类型的参数：")]),s._v(" "),a("ul",[a("li",[s._v("默认参数")]),s._v(" "),a("li",[s._v("带名参数")]),s._v(" "),a("li",[s._v("变长参数")])]),s._v(" "),a("h5",{attrs:{id:"_1-6-1-默认参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-1-默认参数"}},[s._v("#")]),s._v(" 1.6.1 默认参数")]),s._v(" "),a("p",[s._v("在定义方法时可以给参数定义一个默认值。")]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("ol",[a("li",[s._v("定义一个计算两个整数和的方法，这两个值分别默认为10和20")]),s._v(" "),a("li",[s._v("调用该方法，不传任何参数")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个方法, 用来获取两个整数的和")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// x，y的默认值分别为10和20")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 通过默认参数的形式, 调用方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sum: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h5",{attrs:{id:"_1-6-2-带名参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-2-带名参数"}},[s._v("#")]),s._v(" 1.6.2 带名参数")]),s._v(" "),a("p",[s._v("在调用方法时，可以"),a("strong",[s._v("指定参数的名称")]),s._v("来进行调用。")]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("ol",[a("li",[s._v("定义一个计算两个整数和的方法，这两个值分别默认为10和20")]),s._v(" "),a("li",[s._v("调用该方法，只设置第一个参数的值")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个方法, 用来获取两个整数的和")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 通过默认参数的形式, 调用方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sum: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h5",{attrs:{id:"_1-6-3-变长参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-3-变长参数"}},[s._v("#")]),s._v(" 1.6.3 变长参数")]),s._v(" "),a("p",[s._v("如果方法的参数是不固定的，可以将该方法的参数定义成变长参数。")]),s._v(" "),a("p",[a("strong",[s._v("语法格式：")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" 方法名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("参数类型"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("返回值类型 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法体")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("注意:")]),s._v(" "),a("ol",[a("li",[s._v("在参数类型后面加一个"),a("code",[s._v("*")]),s._v("号，表示参数可以是0个或者多个")]),s._v(" "),a("li",[s._v("一个方法有且只能有一个变长参数, 并且变长参数要放到参数列表的最后边.")])])]),s._v(" "),a("p",[s._v("**示例一: **")]),s._v(" "),a("ol",[a("li",[s._v("定义一个计算若干个值相加的方法")]),s._v(" "),a("li",[s._v("调用方法，传入以下数据：1,2,3,4,5")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个计算若干个值相加的方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sum\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 调用方法，传入一些整数, 并获取它们的和")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sum: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_1-7-方法调用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-方法调用方式"}},[s._v("#")]),s._v(" 1.7 方法调用方式")]),s._v(" "),a("p",[s._v("在scala中，有以下几种方法调用方式:")]),s._v(" "),a("ul",[a("li",[s._v("后缀调用法")]),s._v(" "),a("li",[s._v("中缀调用法")]),s._v(" "),a("li",[s._v("花括号调用法")]),s._v(" "),a("li",[s._v("无括号调用法")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意: 在编写spark、flink程序时，会经常使用到这些方法调用方式。")])]),s._v(" "),a("h5",{attrs:{id:"_1-7-1-后缀调用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-1-后缀调用法"}},[s._v("#")]),s._v(" 1.7.1 后缀调用法")]),s._v(" "),a("p",[s._v("这种方法与Java没有区别, 非常简单.")]),s._v(" "),a("p",[a("strong",[s._v("语法")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("对象名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("方法名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("p",[s._v("使用后缀法调用"),a("code",[s._v("Math.abs")]),s._v(", 用来求绝对值")]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//后缀调用法")]),s._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//结果为1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"_1-7-2-中缀调用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-2-中缀调用法"}},[s._v("#")]),s._v(" 1.7.2 中缀调用法")]),s._v(" "),a("p",[a("strong",[s._v("语法")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("对象名 方法名 参数\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("例如："),a("code",[s._v("1 to 10")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意: 如果有多个参数，使用括号括起来")])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("p",[s._v("使用中缀法调用"),a("code",[s._v("Math.abs")]),s._v(", 用来求绝对值")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//中缀调用法")]),s._v("\nMath abs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//结果为1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("扩展: 操作符即方法")])]),s._v(" "),a("p",[s._v("来看一个表达式, 大家觉得这个表达式像不像方法调用？")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在scala中，+ - * / %等这些操作符和Java一样，但在scala中，")]),s._v(" "),a("ul",[a("li",[s._v("所有的操作符都是方法")]),s._v(" "),a("li",[s._v("操作符是一个方法名字是符号的方法")])]),s._v(" "),a("h5",{attrs:{id:"_1-7-3-花括号调用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-3-花括号调用法"}},[s._v("#")]),s._v(" 1.7.3 花括号调用法")]),s._v(" "),a("p",[s._v("语法")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表达式1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表达式2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("注意: 方法只有一个参数，才能使用花括号调用法")])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("p",[s._v("使用花括号调用法"),a("code",[s._v("Math.abs")]),s._v("求绝对值")]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//花括号调用法")]),s._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//结果为: 10")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("scala"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"求绝对值了..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"_1-7-4-无括号调用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-4-无括号调用法"}},[s._v("#")]),s._v(" 1.7.4 无括号调用法")]),s._v(" "),a("p",[s._v("如果方法没有参数，可以省略方法名后面的括号")]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("ul",[a("li",[s._v('定义一个无参数的方法，打印"Hello, Scala!"')]),s._v(" "),a("li",[s._v("使用无括号调用法调用该方法")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//1. 定义一个无参数的方法，打印"Hello, Scala!"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" sayHello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, Scala!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 调用方法")]),s._v("\nsayHello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("注意:")]),s._v(" "),a("ol",[a("li",[s._v("在Scala中, 如果方法的返回值类型是"),a("strong",[s._v("Unit类型")]),s._v(", 这样的方法称之为"),a("strong",[s._v("过程(procedure)")])]),s._v(" "),a("li",[a("strong",[s._v("过程")]),s._v("的等号(=)可以省略不写. 例如:")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" sayHello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, Scala!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以改写为")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" sayHello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, Scala!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意: 这个花括号{}不能省略")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("h3",{attrs:{id:"_2-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数"}},[s._v("#")]),s._v(" 2. 函数")]),s._v(" "),a("p",[s._v("scala支持函数式编程，将来编写Spark/Flink程序会大量使用到函数, 目前, 我们先对函数做一个简单入门, 在后续的学习过程中, 我们会逐步重点讲解函数的用法.")]),s._v(" "),a("h4",{attrs:{id:"_2-1-定义函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-定义函数"}},[s._v("#")]),s._v(" 2.1 定义函数")]),s._v(" "),a("p",[a("strong",[s._v("语法")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" 函数变量名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("参数类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 参数名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("参数类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" 函数体\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("注意:")]),s._v(" "),a("ul",[a("li",[s._v("在Scala中, 函数是一个"),a("strong",[s._v("对象")]),s._v("（变量）")]),s._v(" "),a("li",[s._v("类似于方法，函数也有参数列表和返回值")]),s._v(" "),a("li",[s._v("函数定义不需要使用"),a("code",[s._v("def")]),s._v("定义")]),s._v(" "),a("li",[s._v("无需指定返回值类型")])])]),s._v(" "),a("h4",{attrs:{id:"_2-2-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-示例"}},[s._v("#")]),s._v(" 2.2 示例")]),s._v(" "),a("p",[s._v("**需求: **")]),s._v(" "),a("ol",[a("li",[s._v("定义一个计算两个整数和的函数")]),s._v(" "),a("li",[s._v("调用该函数")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个用来计算两个整数和的函数, 并将其赋值给变量sum")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" getSum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 调用函数.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" getSum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 打印结果")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"result: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_2-3-方法和函数的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-方法和函数的区别"}},[s._v("#")]),s._v(" 2.3 方法和函数的区别")]),s._v(" "),a("p",[s._v("在Java中,  方法和函数之间没有任何区别, 只是叫法不同.  但是在Scala中, 函数和方法就有区别了,  具体如下:")]),s._v(" "),a("ul",[a("li",[s._v("方法是隶属于类或者对象的，在运行时，它是加载到JVM的"),a("strong",[s._v("方法区")]),s._v("中")]),s._v(" "),a("li",[s._v("可以将函数对象赋值给一个变量，在运行时，它是加载到JVM的"),a("strong",[s._v("堆内存")]),s._v("中")]),s._v(" "),a("li",[s._v("函数是一个对象，继承自FunctionN，函数对象有apply，curried，toString，tupled这些方法。方法则没有")])]),s._v(" "),a("blockquote",[a("p",[s._v("结论: 在Scala中, 函数是对象, 而方法是属于对象的, 所以可以理解为:  "),a("strong",[s._v("方法归属于函数.")])])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("p",[s._v("演示方法无法赋值给变量")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 尝试将方法赋值给变量.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//val a = add(1, 2)\t\t//这样写是在调用方法, 并不是把方法赋值给变量(这不报错)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" add  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这样写是把方法赋值给变量，add方法不是对象，不能直接赋值给变量a（报错）")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 上述代码会报错")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" error"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" missing argument list "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" method add\nUnapplied methods are only converted to "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("functions")]),s._v(" when a function "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" is expected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\nYou can make "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" conversion explicit by writing `add _` or `add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("` instead of `add`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" add\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h4",{attrs:{id:"_2-4-方法转换为函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-方法转换为函数"}},[s._v("#")]),s._v(" 2.4 方法转换为函数")]),s._v(" "),a("p",[s._v("有时候需要将方法转换为函数. 例如: 作为变量传递，就需要将方法转换为函数")]),s._v(" "),a("p",[a("strong",[s._v("格式")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" 变量名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 方法名 _\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//格式为: 方法名 + 空格 + 下划线")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("注意: 使用"),a("code",[s._v("_")]),s._v("即可将方法转换为函数")])]),s._v(" "),a("p",[a("strong",[s._v("示例")])]),s._v(" "),a("ol",[a("li",[s._v("定义一个方法用来计算两个整数和")]),s._v(" "),a("li",[s._v("将该方法转换为一个函数，并赋值给变量")])]),s._v(" "),a("p",[a("strong",[s._v("参考代码")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个方法用来计算两个整数和")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 将该方法转换为一个函数，并赋值给变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" add _\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 调用函数, 用来获取两个整数的和.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4. 打印结果")]),s._v("\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"result: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"_3-案例-打印nn乘法表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-案例-打印nn乘法表"}},[s._v("#")]),s._v(" 3. 案例： 打印nn乘法表")]),s._v(" "),a("h4",{attrs:{id:"_3-1-需求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-需求"}},[s._v("#")]),s._v(" 3.1 需求")]),s._v(" "),a("p",[s._v("定义方法实现， 根据用户录入的整数， 打印对应的乘法表。")]),s._v(" "),a("p",[s._v("例如： 用户录入5，则打印55乘法表，用户录入9，则打印99乘法表。")]),s._v(" "),a("h4",{attrs:{id:"_3-2-目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-目的"}},[s._v("#")]),s._v(" 3.2 目的")]),s._v(" "),a("ol",[a("li",[s._v("考察"),a("code",[s._v("键盘录入和方法, 函数")]),s._v("的综合运用.")]),s._v(" "),a("li",[s._v("体会方法和函数的不同.")])]),s._v(" "),a("h4",{attrs:{id:"_3-3-步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-步骤"}},[s._v("#")]),s._v(" 3.3 步骤")]),s._v(" "),a("ol",[a("li",[s._v("定义方法(或者函数), 接收一个整型参数.")]),s._v(" "),a("li",[s._v("通过for循环嵌套实现, 根据传入的整数, 打印对应的乘法表.")]),s._v(" "),a("li",[s._v("调用方法(函数), 输出结果.")])]),s._v(" "),a("h4",{attrs:{id:"_3-4-参考代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-参考代码"}},[s._v("#")]),s._v(" 3.4 参考代码")]),s._v(" "),a("ul",[a("li",[s._v("方式一: 通过方法实现")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个方法, 接收一个整型参数.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" printMT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Multiplication Table(乘法表)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 通过for循环嵌套实现, 根据传入的整数, 打印对应的乘法表.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" to "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" to "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \tprint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token id function"}},[s._v("s")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" * ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" = ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\\t"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("scala"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("StdIn\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请录入一个整数："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" StdIn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("readInt\nprintMT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 调用方法")]),s._v("\nprintMT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//优化版: 上述定义方法的代码可以合并为一行(目前只要能看懂即可)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*def printMT(n:Int) = for(i <- 1 to n; j <- 1 to i) print(s"${j} * ${i} = ${j * i}" + (if(j==i) "\\r\\n" else "\\t"))*/')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("方式二: 通过函数实现")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 定义一个函数, 接收一个整型参数.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" printMT "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2. 通过for循环嵌套实现, 根据传入的整数, 打印对应的乘法表.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" to "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" to "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \tprint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token id function"}},[s._v("s")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" * ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v(" = ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\\t"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3. 调用函数")]),s._v("\nprintMT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//优化版: 上述定义函数的代码可以合并为一行(目前只要能看懂即可)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*val printMT = (n:Int) => for(i <- 1 to n; j <- 1 to i) print(s"${j} * ${i} = ${j * i}" + (if(j==i) "\\r\\n" else "\\t"))*/')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);